{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Solana Insider Monitor","text":"<p>A powerful tool for monitoring Solana wallet activities, detecting balance changes, and receiving real-time alerts.</p> <ul> <li> <p> Quick Start</p> <p>Get up and running with Solana Insider Monitor in minutes.</p> <p> Getting started</p> </li> <li> <p> Configuration</p> <p>Learn how to configure the monitor to suit your needs.</p> <p> Configuration Guide</p> </li> </ul> <ul> <li> <p> Features</p> <p>Explore the powerful features of Solana Insider Monitor.</p> <p> Features</p> </li> <li> <p> API Reference</p> <p>Integrate with our API for custom applications.</p> <p> API Documentation</p> </li> </ul>"},{"location":"index.html#why-solana-insider-monitor","title":"Why Solana Insider Monitor?","text":"<p>Solana Insider Monitor gives you real-time visibility into wallet activities on the Solana blockchain, with features like:</p> <ul> <li>\ud83d\udd0d Monitor multiple wallets simultaneously</li> <li>\ud83d\udcb0 Track token balance changes with precision</li> <li>\u26a1 Real-time alerts for significant changes</li> <li>\ud83d\udd14 Discord integration for instant notifications</li> <li>\ud83d\udcbe Persistent storage for historical data</li> <li>\ud83c\udf10 Web interface for easy monitoring and configuration</li> <li>\ud83d\udd11 Secure API for programmatic access</li> </ul>"},{"location":"index.html#community","title":"Community","text":"<p>Join our Discord community to:</p> <ul> <li>Get help with setup and configuration</li> <li>Share feedback and suggestions</li> <li>Connect with other users</li> <li>Stay updated on new features and releases</li> </ul> <p> Join our Discord Server</p>"},{"location":"index.html#open-source","title":"Open Source","text":"<p>Solana Insider Monitor is open source software. Contributions, issues, and feature requests are welcome!</p> <p> View on GitHub</p>"},{"location":"documentation_guide.html","title":"Documentation Guide","text":""},{"location":"documentation_guide.html#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"documentation_guide.html#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"documentation_guide.html#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"documentation_guide.html#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"documentation_guide.html#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"documentation_guide.html#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"documentation_guide.html#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"documentation_guide.html#icons-and-emojs","title":"Icons and Emojs","text":""},{"location":"troubleshooting.html","title":"Troubleshooting","text":"<p>This guide helps you diagnose and fix common issues that you might encounter when using Solana Insider Monitor.</p>"},{"location":"troubleshooting.html#diagnostic-steps","title":"Diagnostic Steps","text":"<p>Before diving into specific issues, try these general diagnostic steps:</p> <ol> <li> <p>Check Logs: Run the monitor with verbose logging enabled:    <pre><code>RUST_LOG=debug insider-monitor\n</code></pre></p> </li> <li> <p>Verify Configuration: Ensure your <code>config.json</code> file is correctly formatted and contains valid values:    <pre><code>cat config.json | jq\n</code></pre></p> </li> <li> <p>Check Connectivity: Verify that you can connect to the Solana RPC endpoint:    <pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"getHealth\"}' https://api.mainnet-beta.solana.com\n</code></pre></p> </li> <li> <p>Restart the Monitor: Sometimes simply restarting the monitor resolves issues.</p> </li> </ol>"},{"location":"troubleshooting.html#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"troubleshooting.html#connection-issues","title":"Connection Issues","text":""},{"location":"troubleshooting.html#failed-to-connect-to-rpc-endpoint","title":"\"Failed to connect to RPC endpoint\"","text":"<p>Symptoms: - Error messages about connection failures - No wallet data is retrieved - Log messages indicating RPC timeouts</p> <p>Possible causes: 1. Invalid RPC URL in configuration 2. Network connectivity problems 3. RPC endpoint is down or under maintenance 4. Rate limiting by the RPC provider</p> <p>Solutions:</p> <ol> <li> <p>Verify your RPC URL:    Check that your <code>network_url</code> setting is correct:    <pre><code>{\n  \"network_url\": \"https://api.mainnet-beta.solana.com\"\n}\n</code></pre></p> </li> <li> <p>Try an alternative RPC endpoint:    <pre><code>{\n  \"network_url\": \"https://solana-api.projectserum.com\"\n}\n</code></pre></p> </li> <li> <p>Check your network connection:    <pre><code>ping api.mainnet-beta.solana.com\n</code></pre></p> </li> <li> <p>Increase retry settings:    If you're experiencing intermittent connectivity issues, adjust your scan interval:    <pre><code>{\n  \"scan_interval\": \"5m\"\n}\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting.html#alert-configuration-issues","title":"Alert Configuration Issues","text":""},{"location":"troubleshooting.html#not-receiving-alerts-for-significant-changes","title":"\"Not receiving alerts for significant changes\"","text":"<p>Symptoms: - You can see balance changes in the web interface - No alerts are being sent to Discord or shown in the console</p> <p>Possible causes: 1. Alert thresholds are set too high 2. Discord integration is misconfigured 3. Token is in the ignore list 4. Balance is below minimum threshold</p> <p>Solutions:</p> <ol> <li> <p>Check alert thresholds:    Lower the <code>significant_change</code> value to catch smaller changes:    <pre><code>{\n  \"alerts\": {\n    \"significant_change\": 0.05\n  }\n}\n</code></pre></p> </li> <li> <p>Verify Discord configuration:    Ensure Discord integration is properly configured:    <pre><code>{\n  \"discord\": {\n    \"enabled\": true,\n    \"webhook_url\": \"https://discord.com/api/webhooks/your-webhook-url\",\n    \"channel_id\": \"your-channel-id\"\n  }\n}\n</code></pre></p> </li> <li> <p>Check the token ignore list:    Remove any tokens that you want to monitor from the ignore list:    <pre><code>{\n  \"alerts\": {\n    \"ignore_tokens\": []\n  }\n}\n</code></pre></p> </li> <li> <p>Lower minimum balance threshold:    Adjust the minimum balance to catch changes in smaller token holdings:    <pre><code>{\n  \"alerts\": {\n    \"minimum_balance\": 100\n  }\n}\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting.html#web-interface-issues","title":"Web Interface Issues","text":""},{"location":"troubleshooting.html#cannot-access-web-interface","title":"\"Cannot access web interface\"","text":"<p>Symptoms: - Web interface is not loading at http://localhost:8080 - Connection refused errors</p> <p>Possible causes: 1. Monitor not running with web mode enabled 2. Firewall blocking the port 3. Port conflict with another application 4. Permission issues</p> <p>Solutions:</p> <ol> <li> <p>Start with web flag enabled:    <pre><code>insider-monitor -web\n</code></pre></p> </li> <li> <p>Check for port conflicts:    <pre><code>lsof -i :8080\n</code></pre>    If another application is using the port, use a different port:    <pre><code>insider-monitor -web -port 9090\n</code></pre></p> </li> <li> <p>Check firewall settings:    <pre><code>sudo ufw status\n# For Ubuntu/Debian\n\n# or\n\nsudo firewall-cmd --list-all\n# For Fedora/CentOS\n</code></pre></p> </li> <li> <p>Run with elevated permissions if needed:    <pre><code>sudo insider-monitor -web\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting.html#authentication-issues-with-web-interface","title":"\"Authentication issues with web interface\"","text":"<p>Symptoms: - Unable to log in to the web interface - \"Invalid credentials\" error</p> <p>Solutions:</p> <ol> <li> <p>Use default credentials:    Username: <code>admin</code>    Password: <code>admin</code></p> </li> <li> <p>Set a custom password:    <pre><code>export ADMIN_PASSWORD=\"your-secure-password\"\ninsider-monitor -web\n</code></pre></p> </li> <li> <p>Reset authentication:    Stop the monitor, delete any existing auth files, and restart:    <pre><code>rm -f data/auth.json\ninsider-monitor -web\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting.html#data-storage-issues","title":"Data Storage Issues","text":""},{"location":"troubleshooting.html#missing-or-corrupt-data-after-restart","title":"\"Missing or corrupt data after restart\"","text":"<p>Symptoms: - No historical data available after restarting the monitor - Errors about corrupted data files</p> <p>Possible causes: 1. Permission issues with data directory 2. Disk space issues 3. Corrupted data files</p> <p>Solutions:</p> <ol> <li> <p>Check permissions:    <pre><code>ls -la data/\nchmod -R 755 data/\n</code></pre></p> </li> <li> <p>Check disk space:    <pre><code>df -h\n</code></pre></p> </li> <li> <p>Backup and reset data:    <pre><code>cp -r data data_backup\nrm -f data/wallet_data.json\ninsider-monitor\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting.html#performance-issues","title":"Performance Issues","text":""},{"location":"troubleshooting.html#high-cpu-or-memory-usage","title":"\"High CPU or memory usage\"","text":"<p>Symptoms: - Monitor process using excessive CPU or memory - System becoming slow or unresponsive</p> <p>Possible causes: 1. Too many wallets being monitored 2. Scan interval too short 3. Memory leak in application</p> <p>Solutions:</p> <ol> <li> <p>Reduce number of monitored wallets:    Start with fewer wallets and gradually add more.</p> </li> <li> <p>Increase scan interval:    <pre><code>{\n  \"scan_interval\": \"15m\"\n}\n</code></pre></p> </li> <li> <p>Limit token scan depth:    <pre><code>{\n  \"advanced\": {\n    \"max_tokens_per_wallet\": 100\n  }\n}\n</code></pre></p> </li> <li> <p>Update to latest version:    <pre><code>git pull\nmake build\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting.html#debugging-tools","title":"Debugging Tools","text":""},{"location":"troubleshooting.html#log-analysis","title":"Log Analysis","text":"<p>Run with debug logging and save to a file for analysis:</p> <pre><code>RUST_LOG=debug insider-monitor &gt; monitor.log 2&gt;&amp;1\n</code></pre> <p>Then analyze the log file:</p> <pre><code>grep ERROR monitor.log\ngrep \"wallet scan\" monitor.log\n</code></pre>"},{"location":"troubleshooting.html#network-debugging","title":"Network Debugging","text":"<p>Test connectivity to the Solana RPC endpoint:</p> <pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"getHealth\"}' https://api.mainnet-beta.solana.com\n</code></pre>"},{"location":"troubleshooting.html#configuration-validation","title":"Configuration Validation","text":"<p>Validate your configuration file:</p> <pre><code>cat config.json | jq\n</code></pre>"},{"location":"troubleshooting.html#getting-help","title":"Getting Help","text":"<p>If you're still experiencing issues after trying these troubleshooting steps:</p> <ol> <li> <p>Check GitHub Issues:    Search the GitHub Issues to see if others have reported similar problems.</p> </li> <li> <p>Discord Community:    Join our Discord server to get help from the community and developers.</p> </li> <li> <p>Create a Bug Report:    If you've found a bug, please create an issue with:</p> </li> <li>Detailed description of the problem</li> <li>Steps to reproduce</li> <li>Your configuration (with sensitive information removed)</li> <li>Log output</li> <li>System information (OS, Go version)</li> </ol>"},{"location":"api/index.html","title":"API Reference","text":"<p>Solana Insider Monitor provides a comprehensive REST API that allows you to programmatically access wallet data, manage configuration, and integrate with other systems.</p>"},{"location":"api/index.html#api-overview","title":"API Overview","text":"<p>The API is available when running Solana Insider Monitor with the <code>-web</code> flag. All API endpoints are served from the base URL of your instance, for example: <code>http://localhost:8080/api/</code>.</p>"},{"location":"api/index.html#authentication","title":"Authentication","text":"<p>Most API endpoints require authentication using JSON Web Tokens (JWT). To obtain a token, you must first authenticate using your credentials.</p>"},{"location":"api/index.html#obtaining-a-jwt-token","title":"Obtaining a JWT Token","text":"<pre><code>curl -X POST http://localhost:8080/api/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"admin\",\"password\":\"your-password\"}'\n</code></pre> <p>This will return a JWT token that you should include in the <code>Authorization</code> header for subsequent requests:</p> <pre><code>{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"expires_at\": \"2023-05-15T12:00:00Z\"\n}\n</code></pre>"},{"location":"api/index.html#using-the-jwt-token","title":"Using the JWT Token","text":"<p>Include the token in the <code>Authorization</code> header for all protected API requests:</p> <pre><code>curl -X GET http://localhost:8080/api/admin/config \\\n  -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n</code></pre>"},{"location":"api/index.html#api-endpoints","title":"API Endpoints","text":"<p>The API is divided into public and protected endpoints:</p>"},{"location":"api/index.html#public-endpoints","title":"Public Endpoints","text":"<p>These endpoints are accessible without authentication:</p> Endpoint Method Description <code>/api/health</code> GET Check if the API is running <code>/api/login</code> POST Authenticate and get a JWT token <code>/api/wallets</code> GET Get a list of all monitored wallets and their current state <code>/api/wallets/{address}</code> GET Get detailed information about a specific wallet"},{"location":"api/index.html#protected-endpoints","title":"Protected Endpoints","text":"<p>These endpoints require authentication:</p> Endpoint Method Description <code>/api/admin/config</code> GET Get the current configuration <code>/api/admin/config</code> PUT Update the configuration <code>/api/admin/wallets</code> POST Add a new wallet to monitor <code>/api/admin/wallets/{address}</code> DELETE Remove a wallet from monitoring <code>/api/refresh</code> POST Trigger an immediate refresh of wallet data"},{"location":"api/index.html#response-format","title":"Response Format","text":"<p>All API responses are returned in JSON format with a consistent structure:</p> <pre><code>{\n  \"success\": true,\n  \"data\": { ... },\n  \"error\": null\n}\n</code></pre> <p>Or in case of an error:</p> <pre><code>{\n  \"success\": false,\n  \"data\": null,\n  \"error\": {\n    \"code\": \"UNAUTHORIZED\",\n    \"message\": \"Authentication required\"\n  }\n}\n</code></pre>"},{"location":"api/index.html#rate-limiting","title":"Rate Limiting","text":"<p>To prevent abuse, the API implements rate limiting:</p> <ul> <li>60 requests per minute for authenticated endpoints</li> <li>20 requests per minute for unauthenticated endpoints</li> </ul> <p>Rate limit headers are included in all responses:</p> <pre><code>X-RateLimit-Limit: 60\nX-RateLimit-Remaining: 58\nX-RateLimit-Reset: 1620000000\n</code></pre>"},{"location":"api/index.html#detailed-api-documentation","title":"Detailed API Documentation","text":"<p>For detailed information about specific endpoints, see:</p> <ul> <li>Authentication - Detailed guide on authentication</li> <li>Endpoints - Complete endpoint reference</li> <li>Integration Examples - Code examples for common use cases</li> </ul>"},{"location":"api/index.html#common-use-cases","title":"Common Use Cases","text":""},{"location":"api/index.html#monitoring-multiple-wallets","title":"Monitoring Multiple Wallets","text":"<p>You can use the API to fetch data for all monitored wallets:</p> <pre><code>curl -X GET http://localhost:8080/api/wallets\n</code></pre>"},{"location":"api/index.html#adding-a-new-wallet-to-monitor","title":"Adding a New Wallet to Monitor","text":"<pre><code>curl -X POST http://localhost:8080/api/admin/wallets \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"wallet_address\": \"NEW_WALLET_ADDRESS\"}'\n</code></pre>"},{"location":"api/index.html#updating-alert-configuration","title":"Updating Alert Configuration","text":"<pre><code>curl -X PUT http://localhost:8080/api/admin/config \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"alerts\": {\n      \"minimum_balance\": 500,\n      \"significant_change\": 0.10\n    }\n  }'\n</code></pre>"},{"location":"api/index.html#webhook-integration","title":"Webhook Integration","text":"<p>You can configure external systems to receive webhook notifications for alerts:</p> <ol> <li>Set up an endpoint in your application to receive POST requests</li> <li>Configure the webhook URL in Solana Insider Monitor</li> <li>Receive real-time alerts when significant changes are detected</li> </ol> <pre><code>{\n  \"webhook_url\": \"https://your-service.com/webhook\",\n  \"webhook_secret\": \"your-webhook-secret\"\n}\n</code></pre>"},{"location":"api/index.html#api-client-libraries","title":"API Client Libraries","text":"<p>We provide official client libraries for several programming languages:</p> <ul> <li>JavaScript/TypeScript</li> <li>Python</li> <li>Go</li> </ul>"},{"location":"api/index.html#api-versioning","title":"API Versioning","text":"<p>The API follows semantic versioning. The current version is v1.</p> <p>To ensure backward compatibility, we include the version in the URL:</p> <pre><code>/api/v1/wallets\n</code></pre> <p>The default <code>/api/</code> path points to the latest stable version.</p>"},{"location":"api/index.html#error-codes","title":"Error Codes","text":"Error Code HTTP Status Description <code>UNAUTHORIZED</code> 401 Authentication required or invalid token <code>FORBIDDEN</code> 403 Insufficient permissions for this operation <code>NOT_FOUND</code> 404 Requested resource not found <code>VALIDATION_ERROR</code> 400 Invalid request parameters <code>RATE_LIMITED</code> 429 Too many requests, try again later <code>SERVER_ERROR</code> 500 Internal server error"},{"location":"api/index.html#next-steps","title":"Next Steps","text":"<ul> <li>Authentication - Learn more about authentication</li> <li>Endpoints - Explore all available endpoints</li> <li>Integration Examples - See code samples for common use cases</li> </ul>"},{"location":"configuration/index.html","title":"Configuration Guide","text":"<p>Solana Insider Monitor is highly configurable to suit your monitoring needs. This guide explains all configuration options and how to use them effectively.</p>"},{"location":"configuration/index.html#configuration-file-format","title":"Configuration File Format","text":"<p>Solana Insider Monitor uses a JSON configuration file. By default, it looks for <code>config.json</code> in the current directory.</p> <p>Here's the complete configuration file structure with all available options:</p> <pre><code>{\n    \"network_url\": \"https://api.mainnet-beta.solana.com\",\n    \"wallets\": [\n        \"WALLET_ADDRESS_1\",\n        \"WALLET_ADDRESS_2\"\n    ],\n    \"scan_interval\": \"1m\",\n    \"alerts\": {\n        \"minimum_balance\": 1000,\n        \"significant_change\": 0.20,\n        \"ignore_tokens\": [\n            \"TOKEN_MINT_ADDRESS_1\"\n        ]\n    },\n    \"discord\": {\n        \"enabled\": false,\n        \"webhook_url\": \"https://discord.com/api/webhooks/your-webhook-url\",\n        \"channel_id\": \"your-channel-id\"\n    }\n}\n</code></pre>"},{"location":"configuration/index.html#configuration-options","title":"Configuration Options","text":"<ul> <li> <p> Network URL</p> <p>Solana RPC endpoint URL for connecting to the blockchain.</p> <p> Network Settings</p> </li> <li> <p> Wallets</p> <p>List of Solana wallet addresses to monitor.</p> <p> Wallet Settings</p> </li> <li> <p> Alerts</p> <p>Configure alert thresholds and filter settings.</p> <p> Alert Settings</p> </li> <li> <p> Discord</p> <p>Discord webhook integration for notifications.</p> <p> Discord Integration</p> </li> </ul>"},{"location":"configuration/index.html#using-configuration-files","title":"Using Configuration Files","text":""},{"location":"configuration/index.html#loading-a-custom-configuration-file","title":"Loading a Custom Configuration File","text":"<p>You can specify a custom configuration file path:</p> <pre><code>insider-monitor -config /path/to/your/config.json\n</code></pre>"},{"location":"configuration/index.html#hot-reloading","title":"Hot Reloading","text":"<p>Solana Insider Monitor supports hot reloading of configuration changes. When running with the web interface, you can update the configuration through the UI, and changes will be applied without requiring a restart.</p>"},{"location":"configuration/index.html#environment-variables","title":"Environment Variables","text":"<p>You can override configuration file settings with environment variables:</p> Environment Variable Maps to Example <code>NETWORK_URL</code> <code>network_url</code> <code>export NETWORK_URL=\"https://api.mainnet-beta.solana.com\"</code> <code>SCAN_INTERVAL</code> <code>scan_interval</code> <code>export SCAN_INTERVAL=\"30s\"</code> <code>ADMIN_PASSWORD</code> Web UI password <code>export ADMIN_PASSWORD=\"secure-password\"</code> <code>DISCORD_WEBHOOK_URL</code> <code>discord.webhook_url</code> <code>export DISCORD_WEBHOOK_URL=\"https://discord.com/api/webhooks/...\"</code> <code>MIN_BALANCE</code> <code>alerts.minimum_balance</code> <code>export MIN_BALANCE=\"500\"</code> <code>SIGNIFICANT_CHANGE</code> <code>alerts.significant_change</code> <code>export SIGNIFICANT_CHANGE=\"0.1\"</code>"},{"location":"configuration/index.html#example-configurations","title":"Example Configurations","text":""},{"location":"configuration/index.html#basic-monitoring","title":"Basic Monitoring","text":"<pre><code>{\n    \"network_url\": \"https://api.mainnet-beta.solana.com\",\n    \"wallets\": [\"YOUR_WALLET_ADDRESS\"],\n    \"scan_interval\": \"5m\",\n    \"alerts\": {\n        \"minimum_balance\": 1000,\n        \"significant_change\": 0.20,\n        \"ignore_tokens\": []\n    },\n    \"discord\": {\n        \"enabled\": false,\n        \"webhook_url\": \"\",\n        \"channel_id\": \"\"\n    }\n}\n</code></pre>"},{"location":"configuration/index.html#advanced-discord-alerts","title":"Advanced Discord Alerts","text":"<pre><code>{\n    \"network_url\": \"https://api.mainnet-beta.solana.com\",\n    \"wallets\": [\n        \"WALLET_ADDRESS_1\",\n        \"WALLET_ADDRESS_2\"\n    ],\n    \"scan_interval\": \"1m\",\n    \"alerts\": {\n        \"minimum_balance\": 500,\n        \"significant_change\": 0.10,\n        \"ignore_tokens\": [\n            \"USDC_MINT_ADDRESS\",\n            \"USDT_MINT_ADDRESS\"\n        ]\n    },\n    \"discord\": {\n        \"enabled\": true,\n        \"webhook_url\": \"https://discord.com/api/webhooks/your-webhook-url\",\n        \"channel_id\": \"your-channel-id\"\n    }\n}\n</code></pre>"},{"location":"configuration/index.html#configuration-via-web-interface","title":"Configuration via Web Interface","text":"<p>When running with the <code>-web</code> flag, you can configure the monitor through the web interface:</p> <ol> <li>Navigate to <code>http://localhost:8080/config</code></li> <li>Log in with your credentials</li> <li>Modify settings through the UI</li> <li>Save changes, which will be applied immediately</li> </ol> <p></p>"},{"location":"configuration/index.html#configuration-best-practices","title":"Configuration Best Practices","text":"<ol> <li>Start Small: Begin with a few important wallets before scaling up</li> <li>Tune Alert Thresholds: Adjust <code>minimum_balance</code> and <code>significant_change</code> to reduce noise</li> <li>Secure Sensitive Information: Use environment variables for webhook URLs and passwords</li> <li>Regular Updates: Review and update your configuration as monitoring needs change</li> <li>Use Meaningful Comments: Add comments to your configuration for team collaboration</li> </ol>"},{"location":"configuration/index.html#next-steps","title":"Next Steps","text":"<ul> <li>Network Settings - Configuring network connections</li> <li>Wallet Settings - Managing wallet monitoring</li> <li>Alert Settings - Customizing alert thresholds</li> <li>Discord Integration - Setting up Discord notifications</li> </ul>"},{"location":"configuration/alert-settings.html","title":"Alert Settings","text":"<p>This guide explains how to configure alert thresholds and settings for Solana Insider Monitor.</p>"},{"location":"configuration/alert-settings.html#alert-configuration-options","title":"Alert Configuration Options","text":"<p>Alerts in Solana Insider Monitor are highly configurable. You can adjust the following settings:</p>"},{"location":"configuration/alert-settings.html#minimum-balance","title":"Minimum Balance","text":"<p>The <code>minimum_balance</code> setting specifies the minimum token balance (in token units) required to trigger alerts. Tokens with balances below this threshold won't generate alerts, even if they experience significant changes.</p> <pre><code>{\n    \"alerts\": {\n        \"minimum_balance\": 1000\n    }\n}\n</code></pre> <p>This is useful for: - Ignoring dust amounts - Reducing alert noise - Focusing on more significant holdings</p>"},{"location":"configuration/alert-settings.html#significant-change-threshold","title":"Significant Change Threshold","text":"<p>The <code>significant_change</code> setting defines the percentage change in token balance required to trigger an alert. This is expressed as a decimal (e.g., 0.20 = 20%).</p> <pre><code>{\n    \"alerts\": {\n        \"significant_change\": 0.20\n    }\n}\n</code></pre> <p>Lower values make the monitor more sensitive to small changes: - <code>0.05</code> (5%) - Very sensitive, good for critical wallets - <code>0.20</code> (20%) - Moderate sensitivity, good for general monitoring - <code>0.50</code> (50%) - Low sensitivity, only major changes</p>"},{"location":"configuration/alert-settings.html#ignored-tokens","title":"Ignored Tokens","text":"<p>You can specify token mint addresses to exclude from monitoring using the <code>ignore_tokens</code> array:</p> <pre><code>{\n    \"alerts\": {\n        \"ignore_tokens\": [\n            \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",  // USDC\n            \"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\"   // USDT\n        ]\n    }\n}\n</code></pre> <p>This is useful for: - Ignoring stablecoins - Excluding airdrops or spam tokens - Focusing on specific assets of interest</p>"},{"location":"configuration/alert-settings.html#alert-levels","title":"Alert Levels","text":"<p>Solana Insider Monitor categorizes alerts into three severity levels:</p> <ol> <li>Info (\ud83d\udd35): Minor changes slightly above the threshold</li> <li>Warning (\ud83d\udfe1): Moderate changes (typically 1.5x the threshold)</li> <li>Critical (\ud83d\udd34): Major changes (typically 2.5x the threshold)</li> </ol>"},{"location":"configuration/alert-settings.html#configuration-methods","title":"Configuration Methods","text":""},{"location":"configuration/alert-settings.html#via-configuration-file","title":"Via Configuration File","text":"<p>Edit the <code>alerts</code> section in your <code>config.json</code> file:</p> <pre><code>{\n    \"alerts\": {\n        \"minimum_balance\": 1000,\n        \"significant_change\": 0.20,\n        \"ignore_tokens\": [\n            \"TOKEN_MINT_ADDRESS_1\"\n        ]\n    }\n}\n</code></pre>"},{"location":"configuration/alert-settings.html#via-web-interface","title":"Via Web Interface","text":"<p>When running in web mode:</p> <ol> <li>Navigate to Settings &gt; Alerts</li> <li>Adjust the threshold values</li> <li>Add or remove ignored tokens</li> <li>Save your changes</li> </ol> <p>Alert settings will be applied immediately without requiring a restart.</p>"},{"location":"configuration/alert-settings.html#via-environment-variables","title":"Via Environment Variables","text":"<p>You can override the configuration using environment variables:</p> <pre><code>export MIN_BALANCE=500\nexport SIGNIFICANT_CHANGE=0.10\n</code></pre>"},{"location":"configuration/alert-settings.html#best-practices","title":"Best Practices","text":"<ol> <li>Start Conservative: Begin with higher thresholds and gradually lower them</li> <li>Regular Review: Periodically audit your alert settings as your needs change</li> <li>Custom Thresholds: Consider using different thresholds for different wallets</li> <li>Combine with Filtering: Use token filtering alongside thresholds for precision</li> </ol>"},{"location":"configuration/alert-settings.html#example-configurations","title":"Example Configurations","text":""},{"location":"configuration/alert-settings.html#high-sensitivity-monitoring","title":"High Sensitivity Monitoring","text":"<pre><code>{\n    \"alerts\": {\n        \"minimum_balance\": 100,\n        \"significant_change\": 0.05,\n        \"ignore_tokens\": []\n    }\n}\n</code></pre>"},{"location":"configuration/alert-settings.html#balanced-monitoring","title":"Balanced Monitoring","text":"<pre><code>{\n    \"alerts\": {\n        \"minimum_balance\": 1000,\n        \"significant_change\": 0.20,\n        \"ignore_tokens\": [\n            \"USDC_MINT_ADDRESS\",\n            \"USDT_MINT_ADDRESS\"\n        ]\n    }\n}\n</code></pre>"},{"location":"configuration/alert-settings.html#low-noise-monitoring","title":"Low Noise Monitoring","text":"<pre><code>{\n    \"alerts\": {\n        \"minimum_balance\": 5000,\n        \"significant_change\": 0.40,\n        \"ignore_tokens\": [\n            \"USDC_MINT_ADDRESS\",\n            \"USDT_MINT_ADDRESS\",\n            \"OTHER_STABLECOINS\"\n        ]\n    }\n}\n</code></pre>"},{"location":"configuration/alert-settings.html#related-settings","title":"Related Settings","text":"<ul> <li>Discord Integration - Configure alert delivery via Discord</li> <li>Network Settings - Adjust scanning frequency</li> <li>Wallet Settings - Manage monitored wallets</li> </ul>"},{"location":"configuration/discord-integration.html","title":"Discord Integration","text":"<p>This guide explains how to set up and configure Discord notifications for Solana Insider Monitor.</p>"},{"location":"configuration/discord-integration.html#setting-up-discord-webhooks","title":"Setting Up Discord Webhooks","text":"<p>Solana Insider Monitor can send alerts directly to Discord channels using webhooks. Here's how to set it up:</p>"},{"location":"configuration/discord-integration.html#step-1-create-a-webhook-in-discord","title":"Step 1: Create a Webhook in Discord","text":"<ol> <li>Open Discord and navigate to the server where you want to receive alerts</li> <li>Right-click on the channel and select Edit Channel</li> <li>Go to Integrations &gt; Webhooks</li> <li>Click New Webhook</li> <li>Give your webhook a name (e.g., \"Solana Monitor\")</li> <li>Optionally, customize the avatar</li> <li>Click Copy Webhook URL - you'll need this for configuration</li> <li>Click Save</li> </ol>"},{"location":"configuration/discord-integration.html#step-2-configure-solana-insider-monitor","title":"Step 2: Configure Solana Insider Monitor","text":"<p>Add the webhook URL to your configuration:</p> <pre><code>{\n    \"discord\": {\n        \"enabled\": true,\n        \"webhook_url\": \"https://discord.com/api/webhooks/your-webhook-url\",\n        \"channel_id\": \"your-channel-id\"\n    }\n}\n</code></pre> <ul> <li>enabled: Set to <code>true</code> to enable Discord notifications</li> <li>webhook_url: The Discord webhook URL you copied in Step 1</li> <li>channel_id: Optional channel ID for mentions (if different from webhook channel)</li> </ul>"},{"location":"configuration/discord-integration.html#webhook-message-format","title":"Webhook Message Format","text":"<p>Discord alerts include the following information:</p> <ul> <li>Wallet address with explorer link</li> <li>Token name and symbol</li> <li>Balance change amount and percentage</li> <li>Timestamp of the change</li> <li>Alert severity level indicator</li> </ul> <p>Different alert levels use different colors: - Info (Blue): Minor changes - Warning (Yellow): Moderate changes - Critical (Red): Major changes</p>"},{"location":"configuration/discord-integration.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"configuration/discord-integration.html#webhook-testing","title":"Webhook Testing","text":"<p>You can test your Discord webhook manually by using a cURL command:</p> <pre><code>curl -X POST -H \"Content-Type: application/json\" \\\n  -d '{\"content\": \"Test message from Solana Insider Monitor\"}' \\\n  YOUR_WEBHOOK_URL\n</code></pre> <p>Replace <code>YOUR_WEBHOOK_URL</code> with your actual webhook URL.</p>"},{"location":"configuration/discord-integration.html#common-issues","title":"Common Issues","text":"<ul> <li>No alerts appearing:</li> <li>Check that <code>enabled</code> is set to <code>true</code></li> <li>Verify the webhook URL is correct and hasn't been regenerated</li> <li> <p>Ensure the Discord server/channel still exists</p> </li> <li> <p>Rate limiting:</p> </li> <li>Discord may rate limit webhooks if too many messages are sent</li> <li> <p>Consider increasing the <code>significant_change</code> threshold</p> </li> <li> <p>Formatting issues:</p> </li> <li>Make sure the webhook has permission to use embeds</li> <li>Check Discord server settings for webhook permissions</li> </ul>"},{"location":"configuration/discord-integration.html#best-practices","title":"Best Practices","text":"<ol> <li>Create a dedicated channel for monitor alerts to avoid cluttering general channels</li> <li>Set clear channel descriptions to help users understand the alert purpose</li> <li>Use Discord's notification settings to control when you get notified</li> <li>Regularly check webhook status if alerts suddenly stop</li> </ol>"},{"location":"configuration/discord-integration.html#planned-enhancements","title":"Planned Enhancements","text":"<p>We're planning to add more advanced Discord features in future versions. See the Feature Ideas document for details on upcoming improvements.</p>"},{"location":"configuration/discord-integration.html#related-settings","title":"Related Settings","text":"<ul> <li>Alert Settings - Configure alert thresholds</li> <li>Wallet Settings - Manage monitored wallets</li> </ul>"},{"location":"configuration/network-settings.html","title":"Network Settings","text":"<p>This guide explains how to configure network-related settings for Solana Insider Monitor, including RPC endpoints and scan intervals.</p>"},{"location":"configuration/network-settings.html#network-url","title":"Network URL","text":"<p>The <code>network_url</code> setting specifies the Solana RPC endpoint to connect to. This is a crucial setting as it determines which Solana network your monitor will connect to and how reliable your connection will be.</p> <pre><code>{\n    \"network_url\": \"https://api.mainnet-beta.solana.com\"\n}\n</code></pre>"},{"location":"configuration/network-settings.html#available-networks","title":"Available Networks","text":"<p>You can configure different Solana networks:</p> Network Example URL Description Mainnet <code>https://api.mainnet-beta.solana.com</code> Production Solana network Devnet <code>https://api.devnet.solana.com</code> Development test network Testnet <code>https://api.testnet.solana.com</code> Testing network"},{"location":"configuration/network-settings.html#private-rpc-providers","title":"Private RPC Providers","text":"<p>For production monitoring, we recommend using a private RPC provider for better reliability and performance:</p> <ul> <li>QuickNode</li> <li>Alchemy</li> <li>Ankr</li> <li>Helius</li> </ul> <p>Using a private RPC endpoint gives you: - Higher rate limits - Better performance - More reliable connectivity - Additional features like archive data</p>"},{"location":"configuration/network-settings.html#scan-interval","title":"Scan Interval","text":"<p>The <code>scan_interval</code> setting determines how frequently the monitor checks wallets for changes:</p> <pre><code>{\n    \"scan_interval\": \"1m\"\n}\n</code></pre>"},{"location":"configuration/network-settings.html#format","title":"Format","text":"<p>Scan intervals use Go's duration string format:</p> Example Meaning <code>5s</code> 5 seconds <code>30s</code> 30 seconds <code>1m</code> 1 minute <code>5m</code> 5 minutes <code>1h</code> 1 hour"},{"location":"configuration/network-settings.html#considerations","title":"Considerations","text":"<p>When choosing a scan interval, consider:</p> <ul> <li>RPC Rate Limits: Shorter intervals mean more frequent API calls</li> <li>Number of Wallets: More wallets require more API calls per scan</li> <li>Detection Speed: Shorter intervals detect changes sooner</li> <li>Resource Usage: Shorter intervals increase CPU and network usage</li> </ul>"},{"location":"configuration/network-settings.html#recommended-settings","title":"Recommended Settings","text":"Use Case Recommended Interval Notes Critical wallet monitoring <code>30s</code> to <code>1m</code> Requires private RPC Standard monitoring <code>2m</code> to <code>5m</code> Good balance for most uses Low-priority monitoring <code>15m</code> to <code>1h</code> Minimal resource usage"},{"location":"configuration/network-settings.html#advanced-network-configuration","title":"Advanced Network Configuration","text":""},{"location":"configuration/network-settings.html#fault-tolerance","title":"Fault Tolerance","text":"<p>Solana Insider Monitor includes automatic retry logic for handling temporary network issues:</p> <ul> <li>Automatic reconnection if the connection drops</li> <li>Exponential backoff for failed requests</li> <li>Alert notifications for persistent connection problems</li> </ul>"},{"location":"configuration/network-settings.html#multiple-rpc-endpoints","title":"Multiple RPC Endpoints","text":"<p>For high-availability setups, you can configure fallback RPC endpoints by modifying the source code. This allows the monitor to switch to an alternative endpoint if the primary one fails.</p>"},{"location":"configuration/network-settings.html#configuration-methods","title":"Configuration Methods","text":""},{"location":"configuration/network-settings.html#via-configuration-file","title":"Via Configuration File","text":"<p>Edit the network settings in your <code>config.json</code> file:</p> <pre><code>{\n    \"network_url\": \"https://api.mainnet-beta.solana.com\",\n    \"scan_interval\": \"1m\"\n}\n</code></pre>"},{"location":"configuration/network-settings.html#via-environment-variables","title":"Via Environment Variables","text":"<p>You can override the configuration using environment variables:</p> <pre><code>export NETWORK_URL=\"https://api.mainnet-beta.solana.com\"\nexport SCAN_INTERVAL=\"30s\"\n</code></pre>"},{"location":"configuration/network-settings.html#via-web-interface","title":"Via Web Interface","text":"<p>When running in web mode:</p> <ol> <li>Navigate to Settings &gt; Network</li> <li>Update the RPC endpoint and scan interval</li> <li>Save your changes</li> </ol>"},{"location":"configuration/network-settings.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"configuration/network-settings.html#connection-issues","title":"Connection Issues","text":"<p>If you experience connection problems:</p> <ol> <li>Verify the RPC URL is correct and accessible</li> <li>Try a different RPC endpoint to rule out provider-specific issues</li> <li>Increase the scan interval to reduce API call frequency</li> <li>Check for rate limiting in the console logs</li> </ol>"},{"location":"configuration/network-settings.html#performance-issues","title":"Performance Issues","text":"<p>If scanning is slow:</p> <ol> <li>Use a private RPC endpoint for better performance</li> <li>Reduce the number of monitored wallets</li> <li>Increase the scan interval</li> <li>Check your network latency to the RPC endpoint</li> </ol>"},{"location":"configuration/network-settings.html#related-settings","title":"Related Settings","text":"<ul> <li>Wallet Settings - Configure which wallets to monitor</li> <li>Alert Settings - Set up alert thresholds</li> </ul>"},{"location":"configuration/wallet-settings.html","title":"Wallet Settings","text":"<p>This guide explains how to configure which Solana wallets are monitored by Solana Insider Monitor.</p>"},{"location":"configuration/wallet-settings.html#wallet-configuration","title":"Wallet Configuration","text":"<p>The <code>wallets</code> setting in your configuration specifies which Solana wallet addresses to monitor:</p> <pre><code>{\n    \"wallets\": [\n        \"55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr\",\n        \"DWuopnuSqYdBhCXqxfqjqzPGibnhkj6SQqFvgC4jkvjF\"\n    ]\n}\n</code></pre> <p>Each address in the array will be monitored for token balance changes according to your scan interval.</p>"},{"location":"configuration/wallet-settings.html#adding-wallets","title":"Adding Wallets","text":"<p>You can add as many wallet addresses as you need to monitor. However, keep in mind that each additional wallet increases:</p> <ul> <li>API usage (potential for rate limiting)</li> <li>Processing time per scan</li> <li>Storage requirements for historical data</li> </ul>"},{"location":"configuration/wallet-settings.html#valid-wallet-formats","title":"Valid Wallet Formats","text":"<p>Solana wallet addresses: - Are 32-44 characters long - Use base58 encoding (containing alphanumeric characters) - Example: <code>55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr</code></p> <p>Address Validation</p> <p>Solana Insider Monitor validates wallet addresses when loading your configuration. Invalid addresses will cause errors.</p>"},{"location":"configuration/wallet-settings.html#wallet-management-tips","title":"Wallet Management Tips","text":"<p>Here are some practical tips for managing the wallets you monitor:</p>"},{"location":"configuration/wallet-settings.html#document-your-wallets","title":"Document Your Wallets","text":"<p>Keep a separate document recording: - Which wallets you're monitoring - Why each wallet is important - Where the wallet address was found - The expected activity level</p>"},{"location":"configuration/wallet-settings.html#prioritize-important-wallets","title":"Prioritize Important Wallets","text":"<p>When setting up alerts, focus on the most important wallets first: - Treasury wallets holding significant funds - Active trading wallets with frequent changes - Protocol wallets controlling critical functions</p>"},{"location":"configuration/wallet-settings.html#regular-auditing","title":"Regular Auditing","text":"<p>Periodically review your wallet list to: - Remove wallets no longer needed for monitoring - Add new wallets of interest - Verify address accuracy</p>"},{"location":"configuration/wallet-settings.html#finding-wallet-addresses","title":"Finding Wallet Addresses","text":"<p>You can find Solana wallet addresses through various methods:</p> <ol> <li>Solana Explorer: Search for a wallet on Solana Explorer</li> <li>Wallet Applications: Export wallet addresses from Phantom, Solflare, etc.</li> <li>Project Documentation: Many projects publish their treasury wallet addresses</li> <li>Block Explorers: Search for transactions to discover related addresses</li> </ol>"},{"location":"configuration/wallet-settings.html#monitoring-considerations","title":"Monitoring Considerations","text":""},{"location":"configuration/wallet-settings.html#privacy","title":"Privacy","text":"<p>Remember that all Solana blockchain data is public. Monitoring wallets: - Does not require permission from the wallet owner - Does not provide any private key access - Only tracks public, on-chain information</p>"},{"location":"configuration/wallet-settings.html#performance-impact","title":"Performance Impact","text":"<p>The number of wallets you monitor affects performance:</p> Number of Wallets Impact Recommended Scan Interval 1-10 Minimal 30s - 1m 10-50 Moderate 1m - 5m 50-100 Significant 5m - 15m 100+ High 15m+"},{"location":"configuration/wallet-settings.html#configuration-methods","title":"Configuration Methods","text":""},{"location":"configuration/wallet-settings.html#via-configuration-file","title":"Via Configuration File","text":"<p>Edit the wallets array in your <code>config.json</code> file:</p> <pre><code>{\n    \"wallets\": [\n        \"55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr\",\n        \"DWuopnuSqYdBhCXqxfqjqzPGibnhkj6SQqFvgC4jkvjF\"\n    ]\n}\n</code></pre>"},{"location":"configuration/wallet-settings.html#via-web-interface","title":"Via Web Interface","text":"<p>When running in web mode:</p> <ol> <li>Navigate to Settings &gt; Wallets</li> <li>Add or remove wallet addresses</li> <li>Save your changes</li> </ol> <p>The monitor will automatically begin tracking new wallets without requiring a restart.</p>"},{"location":"configuration/wallet-settings.html#special-wallet-types","title":"Special Wallet Types","text":""},{"location":"configuration/wallet-settings.html#token-program-wallets","title":"Token Program Wallets","text":"<p>To monitor SPL token program activities, add the Solana token program address:</p> <pre><code>{\n    \"wallets\": [\n        \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"\n    ]\n}\n</code></pre>"},{"location":"configuration/wallet-settings.html#program-id-monitoring","title":"Program ID Monitoring","text":"<p>You can monitor program deployments and interactions by adding program IDs:</p> <pre><code>{\n    \"wallets\": [\n        \"YOUR_PROGRAM_ID\"\n    ]\n}\n</code></pre>"},{"location":"configuration/wallet-settings.html#best-practices","title":"Best Practices","text":"<ol> <li>Start Small: Begin with a few important wallets before scaling up</li> <li>Review Regularly: Periodically audit your wallet list to remove unnecessary addresses</li> <li>Document Sources: Record why each wallet is being monitored and its significance</li> <li>Test First: When adding critical wallets, verify monitoring works as expected</li> <li>Balance Performance: Find the right balance between comprehensive monitoring and system performance</li> </ol>"},{"location":"configuration/wallet-settings.html#future-enhancements","title":"Future Enhancements","text":"<p>In future versions, we plan to add features like:</p> <ul> <li>Wallet labeling for easier identification</li> <li>Grouping wallets by category</li> <li>Custom alert thresholds per wallet</li> <li>Multiple configuration profiles</li> </ul>"},{"location":"configuration/wallet-settings.html#related-settings","title":"Related Settings","text":"<ul> <li>Network Settings - Configure RPC endpoints and scan intervals</li> <li>Alert Settings - Set up alert thresholds</li> </ul>"},{"location":"developer/contributing.html","title":"Contributing Guide","text":"<p>Thank you for your interest in contributing to Solana Insider Monitor! This guide will help you understand how to contribute to the project effectively.</p>"},{"location":"developer/contributing.html#ways-to-contribute","title":"Ways to Contribute","text":"<p>There are many ways to contribute to Solana Insider Monitor:</p> <ul> <li>\ud83d\udc1b Reporting bugs - Help us identify issues</li> <li>\ud83d\udca1 Feature suggestions - Share your ideas for improvements</li> <li>\ud83d\udcdd Documentation improvements - Help us make the docs more clear and comprehensive</li> <li>\ud83d\udd0d Code reviews - Review pull requests from other contributors</li> <li>\ud83d\udcbb Code contributions - Implement new features or fix bugs</li> </ul>"},{"location":"developer/contributing.html#getting-started","title":"Getting Started","text":""},{"location":"developer/contributing.html#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following:</p> <ul> <li>Go 1.19 or later</li> <li>Git</li> <li>Basic understanding of Solana blockchain (for certain features)</li> </ul>"},{"location":"developer/contributing.html#setting-up-your-development-environment","title":"Setting Up Your Development Environment","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork:    <pre><code>git clone https://github.com/yourusername/insider-monitor.git\ncd insider-monitor\n</code></pre></li> <li>Add upstream remote:    <pre><code>git remote add upstream https://github.com/accursedgalaxy/insider-monitor.git\n</code></pre></li> <li>Install dependencies:    <pre><code>go mod download\n</code></pre></li> <li>Install pre-commit hooks:    <pre><code>pre-commit install\n</code></pre></li> </ol>"},{"location":"developer/contributing.html#development-workflow","title":"Development Workflow","text":""},{"location":"developer/contributing.html#1-branching-strategy","title":"1. Branching Strategy","text":"<ul> <li><code>main</code>: Production-ready code</li> <li>Feature branches: <code>feature/your-feature-name</code></li> <li>Bug fix branches: <code>fix/bug-description</code></li> <li>Hotfix branches: <code>hotfix/urgent-fix</code></li> </ul>"},{"location":"developer/contributing.html#2-making-changes","title":"2. Making Changes","text":"<ol> <li>Sync your main branch:    <pre><code>git checkout main\ngit pull upstream main\n</code></pre></li> <li>Create a new branch:    <pre><code>git checkout -b feature/your-feature-name\n</code></pre></li> <li>Make your changes</li> <li>Run tests:    <pre><code>make test\n</code></pre></li> <li>Commit using conventional commit messages:    <pre><code>git commit -m \"feat: add new feature\"\ngit commit -m \"fix: resolve bug\"\ngit commit -m \"docs: update documentation\"\n</code></pre></li> <li>Push your branch:    <pre><code>git push origin feature/your-feature-name\n</code></pre></li> <li>Create a Pull Request on GitHub</li> </ol>"},{"location":"developer/contributing.html#pull-request-guidelines","title":"Pull Request Guidelines","text":""},{"location":"developer/contributing.html#creating-pull-requests","title":"Creating Pull Requests","text":"<p>When creating a PR, please:</p> <ol> <li>Link related issues - Reference any issues your PR addresses</li> <li>Provide context - Explain what your changes do and why they're needed</li> <li>Include screenshots - For UI changes, include before/after screenshots</li> <li>Update documentation - Update relevant documentation if necessary</li> </ol>"},{"location":"developer/contributing.html#pr-review-process","title":"PR Review Process","text":"<ol> <li>A maintainer will review your PR within a few days</li> <li>Address any feedback or requested changes</li> <li>Once approved, a maintainer will merge your PR</li> <li>Your contribution will be included in the next release</li> </ol>"},{"location":"developer/contributing.html#code-standards","title":"Code Standards","text":""},{"location":"developer/contributing.html#go-code-guidelines","title":"Go Code Guidelines","text":"<ul> <li>Follow Go Code Review Comments</li> <li>Maintain Effective Go principles</li> <li>Use meaningful variable and function names</li> <li>Document all exported functions, types, and constants</li> <li>Run <code>golangci-lint</code> before committing:   <pre><code>make lint\n</code></pre></li> </ul>"},{"location":"developer/contributing.html#testing-guidelines","title":"Testing Guidelines","text":"<ul> <li>Write tests for all new features and bug fixes</li> <li>Maintain test coverage (aim for at least 80% coverage)</li> <li>Ensure all tests pass before submitting your PR</li> </ul>"},{"location":"developer/contributing.html#documentation-guidelines","title":"Documentation Guidelines","text":"<p>When contributing to documentation:</p> <ul> <li>Use clear, concise language</li> <li>Follow the existing style and format</li> <li>Update table of contents when adding new sections</li> <li>Preview changes locally using <code>mkdocs serve</code></li> <li>Check for broken links and references</li> </ul>"},{"location":"developer/contributing.html#release-process","title":"Release Process","text":"<p>Releases follow semantic versioning (MAJOR.MINOR.PATCH): - MAJOR: Breaking changes - MINOR: New features (backwards compatible) - PATCH: Bug fixes</p>"},{"location":"developer/contributing.html#creating-a-release","title":"Creating a Release","text":"<ol> <li>Ensure all changes are merged to <code>main</code></li> <li>Create and push a new tag:    <pre><code>git tag -a v1.0.0 -m \"Release v1.0.0\"\ngit push origin v1.0.0\n</code></pre></li> <li>GitHub Actions will automatically:</li> <li>Run tests</li> <li>Build binaries</li> <li>Create a GitHub release</li> <li>Upload artifacts</li> </ol>"},{"location":"developer/contributing.html#community-guidelines","title":"Community Guidelines","text":"<ul> <li>Be respectful and inclusive in all interactions</li> <li>Focus on constructive feedback</li> <li>Help newcomers get started</li> <li>Acknowledge others' contributions</li> <li>Follow the Code of Conduct</li> </ul>"},{"location":"developer/contributing.html#getting-help","title":"Getting Help","text":"<p>If you need help with your contribution:</p> <ul> <li>Join our Discord community</li> <li>Open an issue with your question</li> <li>Reach out to the maintainers directly</li> </ul> <p>Thank you for contributing to Solana Insider Monitor! Your efforts help make this project better for everyone.</p>"},{"location":"developer/feature-ideas.html","title":"Feature Ideas","text":"<p>This document outlines potential features and enhancements for Solana Insider Monitor. As an open source project, we welcome contributions that implement these ideas or suggest new ones.</p>"},{"location":"developer/feature-ideas.html#high-priority-features","title":"High Priority Features","text":""},{"location":"developer/feature-ideas.html#wallet-management-enhancements","title":"Wallet Management Enhancements","text":""},{"location":"developer/feature-ideas.html#wallet-labeling","title":"Wallet Labeling","text":"<p>Add the ability to assign human-readable labels to wallet addresses for easier identification:</p> <pre><code>{\n    \"labeled_wallets\": [\n        {\n            \"address\": \"55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr\",\n            \"label\": \"Treasury\",\n            \"description\": \"Main treasury wallet\"\n        },\n        {\n            \"address\": \"DWuopnuSqYdBhCXqxfqjqzPGibnhkj6SQqFvgC4jkvjF\",\n            \"label\": \"Development Fund\",\n            \"description\": \"Grants and developer incentives\"\n        }\n    ]\n}\n</code></pre>"},{"location":"developer/feature-ideas.html#wallet-grouping","title":"Wallet Grouping","text":"<p>Support for organizing wallets into logical groups:</p> <pre><code>{\n    \"wallet_groups\": {\n        \"critical\": [\n            \"55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr\"\n        ],\n        \"investments\": [\n            \"DWuopnuSqYdBhCXqxfqjqzPGibnhkj6SQqFvgC4jkvjF\"\n        ],\n        \"defi\": [\n            \"Another_Wallet_Address\"\n        ]\n    }\n}\n</code></pre>"},{"location":"developer/feature-ideas.html#per-wallet-alert-thresholds","title":"Per-Wallet Alert Thresholds","text":"<p>Allow setting different alert thresholds for different wallets:</p> <pre><code>{\n    \"wallet_alerts\": [\n        {\n            \"address\": \"55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr\",\n            \"minimum_balance\": 10000,\n            \"significant_change\": 0.05\n        },\n        {\n            \"address\": \"DWuopnuSqYdBhCXqxfqjqzPGibnhkj6SQqFvgC4jkvjF\",\n            \"minimum_balance\": 1000,\n            \"significant_change\": 0.20\n        }\n    ]\n}\n</code></pre>"},{"location":"developer/feature-ideas.html#alert-system-improvements","title":"Alert System Improvements","text":""},{"location":"developer/feature-ideas.html#multiple-configuration-profiles","title":"Multiple Configuration Profiles","text":"<p>Support for different configuration profiles (e.g., \"high alert\", \"normal monitoring\", \"low priority\"):</p> <pre><code>{\n    \"profiles\": {\n        \"high_alert\": {\n            \"scan_interval\": \"30s\",\n            \"alerts\": {\n                \"minimum_balance\": 100,\n                \"significant_change\": 0.05\n            }\n        },\n        \"normal\": {\n            \"scan_interval\": \"2m\",\n            \"alerts\": {\n                \"minimum_balance\": 1000,\n                \"significant_change\": 0.20\n            }\n        }\n    },\n    \"active_profile\": \"normal\"\n}\n</code></pre>"},{"location":"developer/feature-ideas.html#smart-alerts","title":"Smart Alerts","text":"<p>Implement machine learning to detect unusual activity patterns, not just percentage changes.</p>"},{"location":"developer/feature-ideas.html#alert-routing-rules","title":"Alert Routing Rules","text":"<p>Create rules for routing different types of alerts to different channels:</p> <pre><code>{\n    \"alert_routes\": [\n        {\n            \"condition\": \"balance_change &gt; 100000\",\n            \"action\": \"discord_critical\"\n        },\n        {\n            \"condition\": \"token_symbol == 'SOL'\",\n            \"action\": \"discord_sol_channel\"\n        }\n    ]\n}\n</code></pre>"},{"location":"developer/feature-ideas.html#enhanced-discord-integration","title":"Enhanced Discord Integration","text":"<p>Add advanced Discord webhook features:</p> <pre><code>{\n    \"discord\": {\n        \"enabled\": true,\n        \"webhook_url\": \"https://discord.com/api/webhooks/your-webhook-url\",\n        \"channel_id\": \"your-channel-id\",\n        \"critical_webhook_url\": \"https://discord.com/api/webhooks/critical-webhook-url\",\n        \"warning_webhook_url\": \"https://discord.com/api/webhooks/warning-webhook-url\",\n        \"message_prefix\": \"\ud83d\udea8 ALERT\",\n        \"critical_mention\": \"&lt;@&amp;ROLE_ID&gt;\",\n        \"warning_mention\": \"&lt;@USER_ID&gt;\"\n    }\n}\n</code></pre> <p>This would allow: - Different webhooks for different alert severity levels - Custom message prefixes - Role or user mentions based on alert severity</p>"},{"location":"developer/feature-ideas.html#medium-priority-features","title":"Medium Priority Features","text":""},{"location":"developer/feature-ideas.html#monitoring-enhancements","title":"Monitoring Enhancements","text":""},{"location":"developer/feature-ideas.html#transaction-monitoring","title":"Transaction Monitoring","text":"<p>Monitor specific transaction types, not just balance changes:</p> <pre><code>{\n    \"transaction_monitoring\": {\n        \"enabled\": true,\n        \"types\": [\"swap\", \"transfer\", \"stake\"]\n    }\n}\n</code></pre>"},{"location":"developer/feature-ideas.html#historical-data-analysis","title":"Historical Data Analysis","text":"<p>Add tools for analyzing historical wallet activity and visualizing trends.</p>"},{"location":"developer/feature-ideas.html#token-price-integration","title":"Token Price Integration","text":"<p>Include token price data to show value changes in USD or other currencies.</p>"},{"location":"developer/feature-ideas.html#ui-improvements","title":"UI Improvements","text":""},{"location":"developer/feature-ideas.html#customizable-dashboard","title":"Customizable Dashboard","text":"<p>Allow users to create custom dashboard layouts with the metrics they care about most.</p>"},{"location":"developer/feature-ideas.html#mobile-responsive-design","title":"Mobile Responsive Design","text":"<p>Optimize the web interface for mobile devices.</p>"},{"location":"developer/feature-ideas.html#darklight-theme-toggle","title":"Dark/Light Theme Toggle","text":"<p>Add user preference for UI appearance.</p>"},{"location":"developer/feature-ideas.html#lower-priority-features","title":"Lower Priority Features","text":""},{"location":"developer/feature-ideas.html#integration-possibilities","title":"Integration Possibilities","text":""},{"location":"developer/feature-ideas.html#additional-notification-channels","title":"Additional Notification Channels","text":"<p>Support for more notification channels: - Email - Telegram - Slack - SMS - Mobile push notifications</p>"},{"location":"developer/feature-ideas.html#external-api-integration","title":"External API Integration","text":"<p>Webhook support for integrating with external systems.</p>"},{"location":"developer/feature-ideas.html#multi-chain-support","title":"Multi-Chain Support","text":"<p>Extend monitoring capabilities to other blockchains (Ethereum, Bitcoin, etc.).</p>"},{"location":"developer/feature-ideas.html#administrative-features","title":"Administrative Features","text":""},{"location":"developer/feature-ideas.html#user-management","title":"User Management","text":"<p>Multi-user support with different permission levels: - Admin (full access) - Analyst (view and configure alerts) - Viewer (view only)</p>"},{"location":"developer/feature-ideas.html#audit-logging","title":"Audit Logging","text":"<p>Track who made configuration changes and when.</p>"},{"location":"developer/feature-ideas.html#backup-and-restore","title":"Backup and Restore","text":"<p>Tools for backing up and restoring configuration and historical data.</p>"},{"location":"developer/feature-ideas.html#implementation-guidelines","title":"Implementation Guidelines","text":"<p>If you're interested in implementing any of these features:</p> <ol> <li>Check the GitHub issues to see if someone is already working on it</li> <li>Open a new issue describing the feature you want to implement</li> <li>Fork the repository and create a feature branch</li> <li>Implement the feature with appropriate tests</li> <li>Submit a pull request with clear documentation</li> </ol> <p>Remember to follow the Contributing Guidelines when submitting code.</p>"},{"location":"developer/feature-ideas.html#suggesting-new-features","title":"Suggesting New Features","text":"<p>Have an idea not listed here? We'd love to hear it! Please:</p> <ol> <li>Open a GitHub issue with the \"feature request\" label</li> <li>Describe the feature and its benefits</li> <li>Provide any relevant technical details or examples</li> <li>Indicate if you're interested in implementing it yourself</li> </ol> <p>The community will discuss and prioritize feature requests based on user needs and technical feasibility.</p>"},{"location":"developer/project-structure.html","title":"Project Structure","text":"<p>This guide explains the structure of the Solana Insider Monitor codebase to help developers understand and contribute to the project.</p>"},{"location":"developer/project-structure.html#directory-overview","title":"Directory Overview","text":"<pre><code>insider-monitor/\n\u251c\u2500\u2500 cmd/                    # Command line entry points\n\u2502   \u2514\u2500\u2500 monitor/            # Main application entry point\n\u251c\u2500\u2500 internal/               # Private application packages\n\u2502   \u251c\u2500\u2500 alerts/             # Alert generation and delivery\n\u2502   \u251c\u2500\u2500 auth/               # Authentication for web interface\n\u2502   \u251c\u2500\u2500 config/             # Configuration management\n\u2502   \u251c\u2500\u2500 monitor/            # Core wallet monitoring\n\u2502   \u251c\u2500\u2500 storage/            # Data persistence\n\u2502   \u251c\u2500\u2500 utils/              # Shared utilities\n\u2502   \u2514\u2500\u2500 web/                # Web interface and API\n\u251c\u2500\u2500 data/                   # Data storage directory\n\u251c\u2500\u2500 docs/                   # Documentation\n\u251c\u2500\u2500 bin/                    # Compiled binaries\n\u251c\u2500\u2500 config.json             # Application configuration\n\u251c\u2500\u2500 config.example.json     # Example configuration\n\u251c\u2500\u2500 go.mod                  # Go module definition\n\u251c\u2500\u2500 go.sum                  # Go module checksums\n\u251c\u2500\u2500 Makefile                # Build and development tasks\n\u2514\u2500\u2500 README.md               # Project documentation\n</code></pre>"},{"location":"developer/project-structure.html#core-modules","title":"Core Modules","text":""},{"location":"developer/project-structure.html#command-line-interface-cmd","title":"Command Line Interface (<code>cmd/</code>)","text":"<p>The <code>cmd/</code> directory contains the main entry points for the application:</p> <ul> <li><code>cmd/monitor/main.go</code> - Main application entrypoint with CLI flags</li> </ul> <pre><code>// Main entry point for the application\nfunc main() {\n    // Parse command line flags\n    testMode := flag.Bool(\"test\", false, \"Run in test mode\")\n    webMode := flag.Bool(\"web\", false, \"Run with web UI\")\n    configPath := flag.String(\"config\", \"config.json\", \"Path to config file\")\n    // ...\n}\n</code></pre>"},{"location":"developer/project-structure.html#monitoring-system-internalmonitor","title":"Monitoring System (<code>internal/monitor/</code>)","text":"<p>The monitoring system is responsible for scanning wallets and detecting changes:</p> <ul> <li><code>monitor.go</code> - Core functionality for wallet scanning</li> <li><code>mock_wallet.go</code> - Mock implementation for testing</li> </ul> <pre><code>classDiagram\n    class WalletMonitor {\n        -client *rpc.Client\n        -wallets []solana.PublicKey\n        -networkURL string\n        +ScanAllWallets() map[string]*WalletData\n        +GetClient() *rpc.Client\n        +UpdateWallets(wallets []string) error\n    }\n\n    class WalletData {\n        +WalletAddress string\n        +TokenAccounts map[string]TokenAccountInfo\n        +LastScanned time.Time\n    }\n\n    class TokenAccountInfo {\n        +Balance uint64\n        +LastUpdated time.Time\n        +Symbol string\n        +Decimals uint8\n    }\n\n    WalletMonitor --&gt; WalletData : creates\n    WalletData --&gt; TokenAccountInfo : contains\n</code></pre> <p>The <code>WalletMonitor</code> connects to Solana's RPC API to fetch wallet data and detect changes.</p>"},{"location":"developer/project-structure.html#alert-system-internalalerts","title":"Alert System (<code>internal/alerts/</code>)","text":"<p>The alert system processes significant changes and delivers notifications:</p> <ul> <li><code>alerts.go</code> - Alert interface and types</li> <li><code>discord.go</code> - Discord webhook integration</li> </ul> <pre><code>// Alerter interface defines the contract for alert delivery\ntype Alerter interface {\n    SendAlert(alert Alert) error\n}\n\n// Alert represents a notification about a significant change\ntype Alert struct {\n    Timestamp     time.Time\n    WalletAddress string\n    TokenMint     string\n    AlertType     string\n    Message       string\n    Level         AlertLevel\n    Data          map[string]interface{}\n}\n</code></pre>"},{"location":"developer/project-structure.html#configuration-internalconfig","title":"Configuration (<code>internal/config/</code>)","text":"<p>Handles loading, validating, and updating configuration:</p> <ul> <li><code>config.go</code> - Configuration structure and loading</li> <li><code>update.go</code> - Configuration update logic</li> </ul> <pre><code>// Config represents the application configuration\ntype Config struct {\n    NetworkURL   string   `json:\"network_url\"`\n    Wallets      []string `json:\"wallets\"`\n    ScanInterval string   `json:\"scan_interval\"`\n    Alerts       struct {\n        MinimumBalance    float64  `json:\"minimum_balance\"`\n        SignificantChange float64  `json:\"significant_change\"`\n        IgnoreTokens      []string `json:\"ignore_tokens\"`\n    } `json:\"alerts\"`\n    Discord struct {\n        Enabled    bool   `json:\"enabled\"`\n        WebhookURL string `json:\"webhook_url\"`\n        ChannelID  string `json:\"channel_id\"`\n    } `json:\"discord\"`\n    mu       sync.RWMutex `json:\"-\"`\n    filepath string       `json:\"-\"`\n}\n</code></pre>"},{"location":"developer/project-structure.html#storage-system-internalstorage","title":"Storage System (<code>internal/storage/</code>)","text":"<p>Manages persistent storage of wallet data:</p> <ul> <li><code>storage.go</code> - File-based data storage</li> </ul> <pre><code>// Storage handles persisting wallet data to disk\ntype Storage struct {\n    dataDir string\n}\n\n// LoadWalletData loads wallet data from disk\nfunc (s *Storage) LoadWalletData() (map[string]*monitor.WalletData, error) {\n    // ...\n}\n\n// SaveWalletData saves wallet data to disk\nfunc (s *Storage) SaveWalletData(data map[string]*monitor.WalletData) error {\n    // ...\n}\n</code></pre>"},{"location":"developer/project-structure.html#web-interface-internalweb","title":"Web Interface (<code>internal/web/</code>)","text":"<p>Provides a web UI and REST API:</p> <ul> <li><code>server.go</code> - HTTP server and API handlers</li> <li><code>templates/</code> - HTML templates</li> <li><code>static/</code> - Static assets (CSS, JS, images)</li> </ul> <pre><code>// Server represents the web server\ntype Server struct {\n    config       *config.Config\n    monitor      *monitor.WalletMonitor\n    storage      *storage.Storage\n    port         int\n    router       *http.ServeMux\n    tokenManager *auth.TokenManager\n}\n\n// Start starts the web server\nfunc (s *Server) Start() error {\n    // ...\n}\n</code></pre>"},{"location":"developer/project-structure.html#authentication-internalauth","title":"Authentication (<code>internal/auth/</code>)","text":"<p>Handles authentication for the web interface and API:</p> <ul> <li><code>auth.go</code> - Authentication logic</li> <li><code>tokens.go</code> - JWT token management</li> </ul> <pre><code>// TokenManager handles JWT token creation and validation\ntype TokenManager struct {\n    secretKey []byte\n    expiry    time.Duration\n}\n\n// CreateToken creates a new JWT token\nfunc (tm *TokenManager) CreateToken(username string) (string, time.Time, error) {\n    // ...\n}\n\n// ValidateToken validates a JWT token\nfunc (tm *TokenManager) ValidateToken(tokenString string) (string, error) {\n    // ...\n}\n</code></pre>"},{"location":"developer/project-structure.html#request-flow","title":"Request Flow","text":"<p>The following diagram illustrates the flow of a typical request through the system:</p> <pre><code>sequenceDiagram\n    participant User\n    participant CLI\n    participant Monitor\n    participant Storage\n    participant Alerter\n\n    User-&gt;&gt;CLI: Start monitor\n    CLI-&gt;&gt;Monitor: Initialize\n    Monitor-&gt;&gt;Monitor: Scan wallets\n    Monitor-&gt;&gt;Storage: Load previous data\n    Storage--&gt;&gt;Monitor: Return data\n    Monitor-&gt;&gt;Monitor: Compare changes\n    alt Significant changes\n        Monitor-&gt;&gt;Alerter: Send alerts\n    end\n    Monitor-&gt;&gt;Storage: Save current data\n    loop Every interval\n        Monitor-&gt;&gt;Monitor: Scan wallets\n    end\n</code></pre>"},{"location":"developer/project-structure.html#key-dependencies","title":"Key Dependencies","text":"<p>The project relies on several external dependencies:</p> <ul> <li>solana-go - Go client for Solana blockchain</li> <li>gorilla/mux - HTTP router for the web interface</li> <li>golang-jwt/jwt - JWT authentication</li> <li>joho/godotenv - Environment variable loading</li> </ul>"},{"location":"developer/project-structure.html#build-system","title":"Build System","text":"<p>The project uses a Makefile to standardize build and development tasks:</p> <pre><code># Build the application\nbuild:\n    go build -o bin/insider-monitor cmd/monitor/main.go\n\n# Run tests\ntest:\n    go test -v ./...\n\n# Generate code coverage\ncoverage:\n    go test -coverprofile=coverage.out ./...\n    go tool cover -html=coverage.out\n</code></pre>"},{"location":"developer/project-structure.html#testing-strategy","title":"Testing Strategy","text":"<p>The project uses Go's built-in testing framework:</p> <ul> <li>Unit tests for individual components</li> <li>Mock implementations for external dependencies</li> <li>Integration tests for end-to-end functionality</li> </ul> <p>Example test:</p> <pre><code>func TestWalletMonitor_ScanAllWallets(t *testing.T) {\n    // Set up test\n    mock := NewMockRPCClient()\n    monitor := &amp;WalletMonitor{\n        client: mock,\n        wallets: []solana.PublicKey{testWallet},\n    }\n\n    // Execute test\n    result, err := monitor.ScanAllWallets()\n\n    // Assert results\n    assert.NoError(t, err)\n    assert.Len(t, result, 1)\n    // ...\n}\n</code></pre>"},{"location":"developer/project-structure.html#configuration-management","title":"Configuration Management","text":"<p>Configuration is handled through:</p> <ol> <li>Default values</li> <li>Configuration file (JSON)</li> <li>Environment variables (override file settings)</li> <li>Command line flags (highest priority)</li> </ol>"},{"location":"developer/project-structure.html#next-steps","title":"Next Steps","text":"<ul> <li>Contributing Guide - Learn how to contribute to the project</li> <li>Building from Source - Build the project from source code</li> <li>Testing - Run and write tests</li> </ul>"},{"location":"features/index.html","title":"Features Overview","text":"<p>Solana Insider Monitor comes packed with powerful features designed to give you visibility into Solana wallet activities. Here's an overview of what you can do with this tool.</p>"},{"location":"features/index.html#core-features","title":"Core Features","text":"<ul> <li> <p> Wallet Monitoring</p> <p>Track multiple Solana wallets simultaneously with real-time balance updates and transaction monitoring.</p> <p> Learn More</p> </li> <li> <p> Alert System</p> <p>Get notified about significant changes in token balances with customizable thresholds and multiple notification channels.</p> <p> Learn More</p> </li> <li> <p> Web Interface</p> <p>Monitor wallets through an intuitive web dashboard with detailed visualizations and configuration options.</p> <p> Learn More</p> </li> <li> <p> Storage System</p> <p>Store historical wallet data with persistent storage to track changes over time and prevent false alerts.</p> <p> Learn More</p> </li> </ul>"},{"location":"features/index.html#feature-highlights","title":"Feature Highlights","text":""},{"location":"features/index.html#multi-wallet-monitoring","title":"Multi-Wallet Monitoring","text":"<p>Monitor an unlimited number of Solana wallets simultaneously, with each wallet's tokens tracked independently. Perfect for tracking multiple accounts, projects, or investment portfolios.</p> <pre><code>graph LR\n    A[Monitor] --&gt; B[Wallet 1]\n    A --&gt; C[Wallet 2]\n    A --&gt; D[Wallet 3]\n    B --&gt; E[Token A]\n    B --&gt; F[Token B]\n    C --&gt; G[Token C]\n    D --&gt; H[Token A]\n    D --&gt; I[Token D]\n</code></pre>"},{"location":"features/index.html#real-time-alerts","title":"Real-Time Alerts","text":"<p>Receive instant notifications when significant token balance changes are detected:</p> <ul> <li>\ud83d\udfe2 Info level for minor changes</li> <li>\ud83d\udfe1 Warning level for moderate changes</li> <li>\ud83d\udd34 Critical level for major changes</li> </ul>"},{"location":"features/index.html#discord-integration","title":"Discord Integration","text":"<p>Get alerts directly in your Discord server with rich, formatted messages containing:</p> <ul> <li>Wallet address with explorer link</li> <li>Token name and symbol</li> <li>Balance change amount and percentage</li> <li>Timestamp of the change</li> <li>Alert severity indicator</li> </ul>"},{"location":"features/index.html#web-dashboard","title":"Web Dashboard","text":"<p>Access a comprehensive web dashboard with:</p> <ul> <li>Overview of all monitored wallets</li> <li>Detailed token balance information</li> <li>Historical balance changes</li> <li>Configuration management interface</li> <li>Secure authentication</li> </ul>"},{"location":"features/index.html#api-access","title":"API Access","text":"<p>Integrate with other systems using our REST API:</p> <ul> <li>Fetch wallet data programmatically</li> <li>Update configuration settings</li> <li>Add or remove wallets from monitoring</li> <li>Secure JWT authentication</li> </ul>"},{"location":"features/index.html#available-capabilities","title":"Available Capabilities","text":"<p>Solana Insider Monitor is a fully open-source application with all features freely available to all users:</p> <ul> <li>Unlimited wallet monitoring - Track as many wallets as you need</li> <li>Configurable scan frequency - Adjust polling intervals based on your needs</li> <li>Multiple alert channels - Console, Discord, and extensible for more integrations</li> <li>Comprehensive web interface - Full-featured dashboard and configuration UI</li> <li>Complete API access - Integrate with other systems and services</li> <li>Historical data storage - Track and analyze changes over time</li> <li>Customizable alerts - Set thresholds and conditions to match your requirements</li> <li>Self-hosted - Run on your own infrastructure for maximum privacy and control</li> </ul>"},{"location":"features/index.html#feature-roadmap","title":"Feature Roadmap","text":"<p>We're constantly improving Solana Insider Monitor. Here are some features planned for upcoming releases:</p> <ul> <li>Transaction Monitoring: Track specific transaction types</li> <li>Smart Alerts: AI-powered alert significance detection</li> <li>Portfolio Analysis: Calculate total portfolio value across wallets</li> <li>Mobile App: Native mobile applications for iOS and Android</li> <li>Custom Webhooks: Integrate with any service supporting webhooks</li> <li>Expanded Blockchain Support: Monitor other chains like Ethereum and Bitcoin</li> </ul> <p>Feature Requests</p> <p>Have a feature idea? Join our Discord community to suggest new features or vote on existing ones!</p>"},{"location":"features/alert-system.html","title":"Alert System","text":"<p>Solana Insider Monitor includes a powerful alert system that notifies you about significant changes in wallet balances and activities. This guide explains how the alert system works and how to customize it for your needs.</p>"},{"location":"features/alert-system.html#overview","title":"Overview","text":"<p>The alert system monitors wallet balances for changes and generates notifications based on configurable thresholds. Alerts can be delivered through multiple channels, including console output and Discord integration.</p>"},{"location":"features/alert-system.html#alert-levels","title":"Alert Levels","text":"<p>Alerts are categorized into three severity levels:</p> <ul> <li>\ud83d\udfe2 Info: Minor changes that you want to be aware of but don't require immediate attention</li> <li>\ud83d\udfe1 Warning: Moderate changes that might warrant investigation</li> <li>\ud83d\udd34 Critical: Major changes that require immediate attention</li> </ul>"},{"location":"features/alert-system.html#alert-channels","title":"Alert Channels","text":""},{"location":"features/alert-system.html#console-alerts","title":"Console Alerts","text":"<p>By default, all alerts are displayed in the console output with color-coded severity levels:</p> <pre><code>[INFO] Wallet 6VJ...k2F: USDC balance increased by 100.0 (+5%)\n[WARNING] Wallet AeW...a3f: SOL balance decreased by 10.5 (-15%)\n[CRITICAL] Wallet L3m...8Zq: RAY balance decreased by 5000.0 (-75%)\n</code></pre>"},{"location":"features/alert-system.html#discord-alerts","title":"Discord Alerts","text":"<p>Alerts can be sent to a Discord channel using webhooks. Discord alerts include rich, formatted messages with:</p> <ul> <li>Wallet address with explorer link</li> <li>Token name and symbol</li> <li>Balance change amount and percentage</li> <li>Timestamp of the change</li> <li>Alert severity indicator</li> </ul> <p></p>"},{"location":"features/alert-system.html#configuring-alerts","title":"Configuring Alerts","text":""},{"location":"features/alert-system.html#alert-thresholds","title":"Alert Thresholds","text":"<p>You can configure the thresholds for each alert level in the configuration file:</p> <pre><code>\"alerts\": {\n  \"info_threshold_percent\": 5,\n  \"warning_threshold_percent\": 15,\n  \"critical_threshold_percent\": 25,\n  \"min_value_threshold\": 10\n}\n</code></pre> <ul> <li>Info threshold: Percentage change that triggers an info alert (default: 5%)</li> <li>Warning threshold: Percentage change that triggers a warning alert (default: 15%)</li> <li>Critical threshold: Percentage change that triggers a critical alert (default: 25%)</li> <li>Minimum value threshold: Minimum USD value required to trigger any alert (default: $10)</li> </ul>"},{"location":"features/alert-system.html#customizing-discord-alerts","title":"Customizing Discord Alerts","text":"<p>To enable Discord alerts, configure the Discord webhook in your config file:</p> <pre><code>\"discord\": {\n  \"enabled\": true,\n  \"webhook_url\": \"https://discord.com/api/webhooks/your-webhook-url\",\n  \"username\": \"Solana Monitor\",\n  \"avatar_url\": \"https://solana.com/src/img/branding/solanaLogoMark.svg\",\n  \"mention_role_id\": \"\"\n}\n</code></pre> <p>For more detailed configuration options, see the Discord Integration guide.</p>"},{"location":"features/alert-system.html#alert-filtering","title":"Alert Filtering","text":"<p>You can filter alerts based on:</p> <ul> <li>Specific tokens: Only receive alerts for certain tokens</li> <li>Minimum value: Ignore changes below a certain USD value</li> <li>Specific wallets: Prioritize alerts from important wallets</li> </ul> <p>Configure these filters in the alert settings section of your config file.</p>"},{"location":"features/alert-system.html#advanced-alert-features","title":"Advanced Alert Features","text":""},{"location":"features/alert-system.html#cooldown-periods","title":"Cooldown Periods","text":"<p>To prevent alert spam, the system implements cooldown periods for repeated alerts from the same wallet/token combination:</p> <pre><code>\"alerts\": {\n  \"cooldown_minutes\": 60\n}\n</code></pre> <p>This setting prevents the same alert from being triggered more than once within the specified time period.</p>"},{"location":"features/alert-system.html#aggregate-alerts","title":"Aggregate Alerts","text":"<p>When multiple small changes occur within a short time frame, the system can aggregate them into a single alert to reduce noise:</p> <pre><code>\"alerts\": {\n  \"aggregate_changes\": true,\n  \"aggregate_window_minutes\": 10\n}\n</code></pre>"},{"location":"features/alert-system.html#troubleshooting-alerts","title":"Troubleshooting Alerts","text":"<p>If you're not receiving alerts as expected:</p> <ol> <li>Check your threshold configurations</li> <li>Verify that the token price information is available</li> <li>Ensure Discord webhook URLs are correct (if using Discord)</li> <li>Check the console output for any error messages related to alert delivery</li> </ol> <p>For more help, see the Troubleshooting guide.</p>"},{"location":"features/alert-system.html#alert-system-api","title":"Alert System API","text":"<p>For programmatic access to alerts, you can use the API endpoints:</p> <ul> <li><code>GET /api/alerts</code> - Retrieve recent alerts</li> <li><code>GET /api/alerts/settings</code> - Get alert configuration</li> <li><code>PUT /api/alerts/settings</code> - Update alert configuration</li> </ul> <p>See the API Reference for more details.</p>"},{"location":"features/storage-system.html","title":"Storage System","text":"<p>Solana Insider Monitor includes a robust storage system that persists wallet data, tracks historical changes, and enables advanced analysis of wallet activities over time.</p>"},{"location":"features/storage-system.html#overview","title":"Overview","text":"<p>The storage system ensures that historical wallet data is preserved across application restarts and provides a foundation for trend analysis, change detection, and alert validation.</p>"},{"location":"features/storage-system.html#storage-options","title":"Storage Options","text":"<p>Solana Insider Monitor offers multiple storage options to fit different use cases:</p>"},{"location":"features/storage-system.html#json-file-storage","title":"JSON File Storage","text":"<p>The default storage method uses JSON files to persist wallet data:</p> <ul> <li>Data file: Stores current wallet balances and token information</li> <li>History file: Maintains a record of balance changes over time</li> <li>Alert file: Stores alerts generated by the system</li> </ul> <p>This approach is suitable for most users and requires no additional setup.</p>"},{"location":"features/storage-system.html#memory-only-mode","title":"Memory-Only Mode","text":"<p>For testing or temporary monitoring, you can run the monitor in memory-only mode with the <code>-no-storage</code> flag:</p> <pre><code>./bin/monitor -no-storage\n</code></pre> <p>In this mode, data is not persisted between application restarts.</p>"},{"location":"features/storage-system.html#data-structure","title":"Data Structure","text":""},{"location":"features/storage-system.html#wallet-data","title":"Wallet Data","text":"<p>The storage system maintains the following information for each wallet:</p> <ul> <li>Wallet address</li> <li>Current token balances</li> <li>Token metadata (name, symbol, decimals)</li> <li>Last update timestamp</li> <li>Associated labels or tags</li> </ul>"},{"location":"features/storage-system.html#historical-data","title":"Historical Data","text":"<p>Historical data includes:</p> <ul> <li>Token balance snapshots over time</li> <li>Percentage and absolute changes</li> <li>USD value estimation (when available)</li> <li>Timestamps for each data point</li> </ul>"},{"location":"features/storage-system.html#data-management","title":"Data Management","text":""},{"location":"features/storage-system.html#data-retention","title":"Data Retention","text":"<p>By default, historical data is retained for 30 days. You can customize the retention period in the configuration:</p> <pre><code>\"storage\": {\n  \"history_retention_days\": 60\n}\n</code></pre>"},{"location":"features/storage-system.html#data-backup","title":"Data Backup","text":"<p>It's recommended to regularly back up the data directory to prevent data loss. You can specify a custom data directory location:</p> <pre><code>./bin/monitor -data-dir /path/to/backup/location\n</code></pre>"},{"location":"features/storage-system.html#data-importexport","title":"Data Import/Export","text":"<p>The storage system supports importing and exporting data:</p> <ul> <li>Export: Save current data to a JSON file for backup or analysis</li> <li>Import: Load data from a previously exported file</li> </ul> <p>These operations can be performed via the web interface or command-line flags.</p>"},{"location":"features/storage-system.html#performance-considerations","title":"Performance Considerations","text":""},{"location":"features/storage-system.html#file-size-management","title":"File Size Management","text":"<p>For long-running instances monitoring many wallets, the history file can grow large. The system automatically performs compaction to manage file size:</p> <pre><code>\"storage\": {\n  \"auto_compact\": true,\n  \"compact_threshold_mb\": 100\n}\n</code></pre>"},{"location":"features/storage-system.html#data-consistency","title":"Data Consistency","text":"<p>The storage system ensures data consistency through:</p> <ul> <li>Atomic write operations</li> <li>Regular checkpoints</li> <li>Validation on read/write</li> </ul>"},{"location":"features/storage-system.html#advanced-features","title":"Advanced Features","text":""},{"location":"features/storage-system.html#data-analysis","title":"Data Analysis","text":"<p>The stored historical data enables several analytical capabilities:</p> <ul> <li>Balance Trends: Analyze how wallet balances change over time</li> <li>Volatility Detection: Identify wallets with frequent large changes</li> <li>Pattern Recognition: Detect repeated balance change patterns</li> </ul>"},{"location":"features/storage-system.html#custom-queries","title":"Custom Queries","text":"<p>When using the web interface, you can perform custom queries on the stored data:</p> <ul> <li>Filter by date range</li> <li>Group by token type</li> <li>Sort by change magnitude</li> <li>Export results as CSV</li> </ul>"},{"location":"features/storage-system.html#data-privacy","title":"Data Privacy","text":"<p>The storage system does not collect any personal information beyond what's available on the public blockchain. All data stored is derived from public on-chain activity.</p>"},{"location":"features/storage-system.html#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues with the storage system:</p> <ol> <li>Check if the data directory is writable</li> <li>Verify disk space is sufficient</li> <li>Consider compacting the history file if it's grown large</li> <li>Check for file corruption (the system will attempt auto-recovery)</li> </ol> <p>For more help, see the Troubleshooting guide.</p>"},{"location":"features/storage-system.html#future-enhancements","title":"Future Enhancements","text":"<p>Planned improvements to the storage system include:</p> <ul> <li>Database backend options (SQLite, PostgreSQL)</li> <li>Cloud storage integration</li> <li>Enhanced data compression</li> <li>More advanced query capabilities</li> </ul>"},{"location":"features/wallet-monitoring.html","title":"Wallet Monitoring","text":"<p>The core functionality of Solana Insider Monitor is its ability to track Solana wallets and monitor their token balances in real-time. This page explains how the wallet monitoring system works and how to use it effectively.</p>"},{"location":"features/wallet-monitoring.html#how-it-works","title":"How It Works","text":"<p>Solana Insider Monitor connects to the Solana blockchain through RPC endpoints and periodically scans wallet addresses to:</p> <ol> <li>Retrieve token accounts associated with each wallet</li> <li>Fetch current balances for all tokens</li> <li>Compare with previous balances to detect changes</li> <li>Generate alerts for significant changes</li> <li>Store the data for future reference</li> </ol> <p>The process repeats based on your configured scan interval, providing near real-time monitoring of wallet activities.</p> <pre><code>sequenceDiagram\n    participant Monitor\n    participant RPC as Solana RPC\n    participant Storage\n    participant Alerter\n\n    loop Every Scan Interval\n        Monitor-&gt;&gt;RPC: Request wallet token accounts\n        RPC--&gt;&gt;Monitor: Return token accounts\n        Monitor-&gt;&gt;Storage: Fetch previous data\n        Storage--&gt;&gt;Monitor: Return previous data\n        Monitor-&gt;&gt;Monitor: Compare token balances\n        alt Significant Changes Detected\n            Monitor-&gt;&gt;Alerter: Send alert\n        end\n        Monitor-&gt;&gt;Storage: Save current data\n    end\n</code></pre>"},{"location":"features/wallet-monitoring.html#token-account-detection","title":"Token Account Detection","text":"<p>For each wallet address, Solana Insider Monitor automatically detects:</p> <ul> <li>SOL balance (native token)</li> <li>All SPL tokens held by the wallet</li> <li>Token metadata (symbol, name, decimals)</li> <li>Token account addresses</li> </ul>"},{"location":"features/wallet-monitoring.html#balance-comparison","title":"Balance Comparison","text":"<p>The monitor compares current balances with previously recorded balances to calculate:</p> <ul> <li>Absolute balance change (token amount)</li> <li>Percentage change</li> <li>Whether the change exceeds your configured thresholds</li> </ul>"},{"location":"features/wallet-monitoring.html#monitoring-multiple-wallets","title":"Monitoring Multiple Wallets","text":"<p>Solana Insider Monitor can track an unlimited number of wallet addresses simultaneously. To add wallets:</p> <ol> <li> <p>Edit your <code>config.json</code> file:    <pre><code>{\n    \"wallets\": [\n        \"55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr\",\n        \"DWuopnuSqYdBhCXqxfqjqzPGibnhkj6SQqFvgC4jkvjF\",\n        \"Another_Wallet_Address\"\n    ]\n}\n</code></pre></p> </li> <li> <p>Or use the web interface:</p> </li> <li>Navigate to Settings &gt; Wallets</li> <li>Add new wallet addresses</li> <li>Save changes</li> </ol>"},{"location":"features/wallet-monitoring.html#scan-interval-configuration","title":"Scan Interval Configuration","text":"<p>You can configure how frequently the monitor scans wallets:</p> <pre><code>{\n    \"scan_interval\": \"30s\"  // Scan every 30 seconds\n}\n</code></pre> <p>Common interval formats: - <code>30s</code> - 30 seconds - <code>1m</code> - 1 minute - <code>5m</code> - 5 minutes - <code>1h</code> - 1 hour</p> <p>Scan Interval Considerations</p> <p>Shorter intervals provide more real-time data but increase RPC usage. Consider using longer intervals (5-15 minutes) for non-critical monitoring or when using public RPC endpoints that may have rate limits.</p>"},{"location":"features/wallet-monitoring.html#error-handling","title":"Error Handling","text":"<p>Solana Insider Monitor includes robust error handling to deal with network issues:</p> <ul> <li>Automatic Retry: If a scan fails, the monitor will automatically retry</li> <li>Exponential Backoff: Progressively longer delays between retries to avoid overwhelming the network</li> <li>Connection Monitoring: Detection of network connectivity issues with alerts when connection is lost or restored</li> <li>Data Persistence: Historical data is preserved during outages to avoid false alerts when connectivity is restored</li> </ul>"},{"location":"features/wallet-monitoring.html#viewing-wallet-data","title":"Viewing Wallet Data","text":""},{"location":"features/wallet-monitoring.html#console-output","title":"Console Output","text":"<p>When running in console mode, wallet scan results are output to the terminal:</p> <pre><code>[INFO] 2023-05-15T08:30:00Z: Scanning wallets...\n[INFO] 2023-05-15T08:30:01Z: Wallet 55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr has 5 token accounts\n[INFO] 2023-05-15T08:30:01Z: Wallet DWuopnuSqYdBhCXqxfqjqzPGibnhkj6SQqFvgC4jkvjF has 3 token accounts\n</code></pre>"},{"location":"features/wallet-monitoring.html#web-interface","title":"Web Interface","text":"<p>The web interface provides a more visual representation of wallet data:</p> <ol> <li>Dashboard Overview: Summary of all monitored wallets</li> <li>Wallet Detail View: Detailed information about each wallet's tokens</li> <li>Balance History: Visual representation of balance changes over time</li> </ol> <p></p>"},{"location":"features/wallet-monitoring.html#advanced-features","title":"Advanced Features","text":""},{"location":"features/wallet-monitoring.html#token-filtering","title":"Token Filtering","text":"<p>You can configure the monitor to ignore specific tokens:</p> <pre><code>{\n    \"alerts\": {\n        \"ignore_tokens\": [\n            \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",  # USDC\n            \"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\"   # USDT\n        ]\n    }\n}\n</code></pre> <p>This is useful for avoiding alerts on stablecoins or tokens that frequently change but aren't of interest.</p>"},{"location":"features/wallet-monitoring.html#minimum-balance-threshold","title":"Minimum Balance Threshold","text":"<p>Set a minimum balance threshold to avoid alerts for insignificant token amounts:</p> <pre><code>{\n    \"alerts\": {\n        \"minimum_balance\": 1000\n    }\n}\n</code></pre> <p>Tokens with balances below this threshold won't trigger alerts, reducing noise from dust amounts.</p>"},{"location":"features/wallet-monitoring.html#custom-rpc-endpoints","title":"Custom RPC Endpoints","text":"<p>For better performance and reliability, you can configure a custom RPC endpoint:</p> <pre><code>{\n    \"network_url\": \"https://your-custom-rpc-endpoint.com\"\n}\n</code></pre>"},{"location":"features/wallet-monitoring.html#best-practices","title":"Best Practices","text":"<ol> <li>Start Small: Begin by monitoring a few important wallets before adding more</li> <li>Adjust Thresholds: Fine-tune alert thresholds to reduce noise from minor fluctuations</li> <li>Use Private RPC: For production monitoring, use a private RPC endpoint for better reliability</li> <li>Regular Maintenance: Periodically review and clean up your wallet list</li> <li>Group Related Wallets: Use naming conventions or tags to group related wallets</li> </ol>"},{"location":"features/wallet-monitoring.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"features/wallet-monitoring.html#common-issues","title":"Common Issues","text":"<ul> <li>High RPC Latency: If scans are slow, try a different RPC endpoint</li> <li>Rate Limiting: Public RPCs may rate-limit requests; increase scan interval or use a private endpoint</li> <li>Missing Token Metadata: Some newer tokens may lack metadata; this doesn't affect balance monitoring</li> <li>Large Number of Tokens: Wallets with hundreds of tokens may take longer to scan</li> </ul>"},{"location":"features/wallet-monitoring.html#logs-and-debugging","title":"Logs and Debugging","text":"<p>When troubleshooting, run the monitor with more verbose logging:</p> <pre><code>RUST_LOG=debug insider-monitor\n</code></pre> <p>This will provide more detailed information about the scanning process, RPC requests, and error handling.</p>"},{"location":"features/web-interface.html","title":"Web Interface","text":"<p>Solana Insider Monitor includes a comprehensive web interface that provides a visual dashboard for monitoring wallet activities, managing configuration, and viewing alerts.</p>"},{"location":"features/web-interface.html#overview","title":"Overview","text":"<p>The web interface provides a user-friendly way to interact with Solana Insider Monitor without relying on command-line tools. It offers real-time data visualization, configuration management, and an overview of monitored wallets.</p>"},{"location":"features/web-interface.html#getting-started","title":"Getting Started","text":""},{"location":"features/web-interface.html#enabling-the-web-interface","title":"Enabling the Web Interface","text":"<p>To start Solana Insider Monitor with the web interface enabled, use the <code>-web</code> flag:</p> <pre><code>./bin/monitor -web\n</code></pre> <p>By default, the web server runs on port 8080. You can specify a different port using the <code>-port</code> flag:</p> <pre><code>./bin/monitor -web -port 3000\n</code></pre>"},{"location":"features/web-interface.html#accessing-the-web-interface","title":"Accessing the Web Interface","text":"<p>Once the monitor is running with the web interface enabled, access it by navigating to:</p> <pre><code>http://localhost:8080\n</code></pre> <p>(Replace 8080 with your custom port if specified)</p>"},{"location":"features/web-interface.html#authentication","title":"Authentication","text":"<p>The web interface requires authentication to prevent unauthorized access. Default credentials are:</p> <ul> <li>Username: admin</li> <li>Password: password</li> </ul> <p>Default Credentials</p> <p>It's highly recommended to change the default credentials by setting the <code>ADMIN_USERNAME</code> and <code>ADMIN_PASSWORD</code> environment variables before running in production.</p>"},{"location":"features/web-interface.html#dashboard-features","title":"Dashboard Features","text":""},{"location":"features/web-interface.html#wallet-overview","title":"Wallet Overview","text":"<p>The dashboard home page displays an overview of all monitored wallets, showing:</p> <ul> <li>Total number of wallets being monitored</li> <li>Summary of recent balance changes</li> <li>Alert statistics</li> <li>System status information</li> </ul> <p></p>"},{"location":"features/web-interface.html#wallet-details","title":"Wallet Details","text":"<p>Clicking on a wallet address opens a detailed view showing:</p> <ul> <li>Complete token balance list</li> <li>Historical balance changes</li> <li>Recent transactions</li> <li>Alert history specific to the wallet</li> </ul>"},{"location":"features/web-interface.html#real-time-updates","title":"Real-time Updates","text":"<p>The web interface updates automatically when new data is available, providing a real-time view of wallet activities without requiring manual refreshes.</p>"},{"location":"features/web-interface.html#configuration-management","title":"Configuration Management","text":""},{"location":"features/web-interface.html#editing-configuration","title":"Editing Configuration","text":"<p>The web interface includes a configuration editor that allows you to:</p> <ul> <li>Add or remove wallets from monitoring</li> <li>Adjust alert thresholds</li> <li>Configure Discord integration</li> <li>Modify network settings</li> </ul> <p>Changes made through the web interface are applied immediately without requiring a restart of the monitor.</p> <p></p>"},{"location":"features/web-interface.html#importexport","title":"Import/Export","text":"<p>You can import or export configuration files directly through the web interface:</p> <ul> <li>Import: Upload a JSON configuration file to apply settings</li> <li>Export: Download the current configuration as a JSON file for backup or transferring to another instance</li> </ul>"},{"location":"features/web-interface.html#alert-management","title":"Alert Management","text":""},{"location":"features/web-interface.html#viewing-alerts","title":"Viewing Alerts","text":"<p>The alerts page displays all recent alerts with:</p> <ul> <li>Severity indicator</li> <li>Affected wallet and token</li> <li>Change amount and percentage</li> <li>Timestamp</li> <li>Filtering options by date, wallet, or severity</li> </ul>"},{"location":"features/web-interface.html#alert-settings","title":"Alert Settings","text":"<p>Adjust alert thresholds and notification settings through the web interface:</p> <ul> <li>Set percentage thresholds for different alert levels</li> <li>Configure minimum value thresholds</li> <li>Enable or disable notification channels</li> <li>Set cooldown periods to prevent alert spam</li> </ul>"},{"location":"features/web-interface.html#mobile-responsiveness","title":"Mobile Responsiveness","text":"<p>The web interface is designed to be responsive and works well on mobile devices, allowing you to monitor your wallets on the go.</p>"},{"location":"features/web-interface.html#api-access","title":"API Access","text":"<p>The web interface includes a built-in API explorer where you can:</p> <ul> <li>Test API endpoints</li> <li>Generate API tokens</li> <li>View request/response examples</li> </ul> <p>For more information on the API, see the API Reference.</p>"},{"location":"features/web-interface.html#security-considerations","title":"Security Considerations","text":"<p>The web interface implements several security measures:</p> <ul> <li>JWT-based authentication</li> <li>HTTPS support (when configured with SSL certificates)</li> <li>Automatic session timeout after period of inactivity</li> <li>Brute force protection with request limiting</li> </ul>"},{"location":"features/web-interface.html#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues with the web interface:</p> <ol> <li>Ensure the server is running with the <code>-web</code> flag</li> <li>Check network/firewall settings if accessing remotely</li> <li>Clear browser cache if you see outdated information</li> <li>Check console logs for error messages</li> </ol> <p>For more help, see the Troubleshooting guide.</p>"},{"location":"getting-started/installation.html","title":"Installation Guide","text":"<p>This guide walks you through the process of installing the Solana Insider Monitor on your system.</p>"},{"location":"getting-started/installation.html#prerequisites","title":"Prerequisites","text":"<p>Before installing Solana Insider Monitor, ensure you have the following:</p> <ul> <li>Go version 1.23.2 or later</li> <li>Git for cloning the repository</li> <li>Access to a Solana RPC endpoint (mainnet, devnet, or testnet)</li> </ul> <p>RPC Endpoints</p> <p>You can use public RPC endpoints, but for better reliability and performance, consider using a dedicated service like:</p> <ul> <li>QuickNode</li> <li>Alchemy</li> <li>Ankr</li> </ul>"},{"location":"getting-started/installation.html#installation-methods","title":"Installation Methods","text":"From SourceUsing DockerPrebuilt Binaries"},{"location":"getting-started/installation.html#clone-the-repository","title":"Clone the Repository","text":"<pre><code>git clone https://github.com/accursedgalaxy/insider-monitor.git\ncd insider-monitor\n</code></pre>"},{"location":"getting-started/installation.html#install-dependencies","title":"Install Dependencies","text":"<pre><code>go mod download\n</code></pre>"},{"location":"getting-started/installation.html#build-the-binary-optional","title":"Build the Binary (Optional)","text":"<pre><code>make build\n</code></pre> <p>This will compile the binary to the <code>bin</code> directory.</p>"},{"location":"getting-started/installation.html#pull-the-docker-image","title":"Pull the Docker Image","text":"<pre><code>docker pull accursedgalaxy/insider-monitor:latest\n</code></pre>"},{"location":"getting-started/installation.html#run-with-docker","title":"Run with Docker","text":"<pre><code>docker run -d \\\n  --name solana-monitor \\\n  -p 8080:8080 \\\n  -v $(pwd)/config.json:/app/config.json \\\n  -v $(pwd)/data:/app/data \\\n  accursedgalaxy/insider-monitor\n</code></pre>"},{"location":"getting-started/installation.html#using-docker-compose","title":"Using Docker Compose","text":"<p>Create a <code>docker-compose.yml</code> file:</p> <pre><code>version: '3'\nservices:\n  monitor:\n    image: accursedgalaxy/insider-monitor:latest\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - ./config.json:/app/config.json\n      - ./data:/app/data\n    restart: unless-stopped\n</code></pre> <p>Then run:</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"getting-started/installation.html#download-latest-release","title":"Download Latest Release","text":"<p>Go to the Releases page and download the appropriate binary for your operating system.</p>"},{"location":"getting-started/installation.html#extract-and-install","title":"Extract and Install","text":"<pre><code># Extract the archive\ntar -xzf insider-monitor-v1.0.0-linux-amd64.tar.gz\n\n# Make the binary executable\nchmod +x insider-monitor\n\n# Optionally, move to a directory in your PATH\nsudo mv insider-monitor /usr/local/bin/\n</code></pre>"},{"location":"getting-started/installation.html#verifying-installation","title":"Verifying Installation","text":"<p>After installation, verify it works by running:</p> <pre><code>insider-monitor -version\n</code></pre> <p>Or if running from source:</p> <pre><code>go run cmd/monitor/main.go -version\n</code></pre> <p>You should see output showing the current version of Solana Insider Monitor.</p>"},{"location":"getting-started/installation.html#initial-configuration","title":"Initial Configuration","text":"<p>After installation, you'll need to create a configuration file:</p> <ol> <li> <p>Copy the example configuration:    <pre><code>cp config.example.json config.json\n</code></pre></p> </li> <li> <p>Edit the file to include your Solana wallet addresses and network details.</p> </li> </ol> <p>See the Configuration Guide for detailed information on configuration options.</p>"},{"location":"getting-started/installation.html#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start Guide - Get up and running quickly</li> <li>Configuration Guide - Learn how to configure the monitor</li> <li>Running Modes - Understand different ways to run the monitor</li> </ul>"},{"location":"getting-started/quick-start.html","title":"Quick Start Guide","text":"<p>This guide will help you get Solana Insider Monitor up and running quickly. For a more detailed setup, refer to the Installation Guide.</p>"},{"location":"getting-started/quick-start.html#5-minute-setup","title":"5-Minute Setup","text":"<p>Follow these steps to have Solana Insider Monitor running in less than 5 minutes.</p>"},{"location":"getting-started/quick-start.html#step-1-install","title":"Step 1: Install","text":"<p>Clone the repository and install dependencies:</p> <pre><code>git clone https://github.com/accursedgalaxy/insider-monitor.git\ncd insider-monitor\ngo mod download\n</code></pre>"},{"location":"getting-started/quick-start.html#step-2-configure","title":"Step 2: Configure","text":"<p>Create a basic configuration file:</p> <pre><code>cp config.example.json config.json\n</code></pre> <p>Edit <code>config.json</code> with your favorite text editor:</p> <pre><code>{\n    \"network_url\": \"https://api.mainnet-beta.solana.com\",\n    \"wallets\": [\n        \"YOUR_WALLET_ADDRESS_1\",\n        \"YOUR_WALLET_ADDRESS_2\"\n    ],\n    \"scan_interval\": \"1m\",\n    \"alerts\": {\n        \"minimum_balance\": 1000,\n        \"significant_change\": 0.20,\n        \"ignore_tokens\": []\n    },\n    \"discord\": {\n        \"enabled\": false,\n        \"webhook_url\": \"\",\n        \"channel_id\": \"\"\n    }\n}\n</code></pre> <p>Replace Wallet Addresses</p> <p>Make sure to replace <code>YOUR_WALLET_ADDRESS_1</code> and <code>YOUR_WALLET_ADDRESS_2</code> with actual Solana wallet addresses you want to monitor.</p>"},{"location":"getting-started/quick-start.html#step-3-run","title":"Step 3: Run","text":"<p>Start the monitor in console mode:</p> <pre><code>go run cmd/monitor/main.go\n</code></pre> <p>Or with the web interface:</p> <pre><code>go run cmd/monitor/main.go -web\n</code></pre> <p>If you've built the binary:</p> <pre><code>./bin/insider-monitor -web\n</code></pre>"},{"location":"getting-started/quick-start.html#step-4-access-the-web-interface","title":"Step 4: Access the Web Interface","text":"<p>If you started with the <code>-web</code> flag, open your browser and navigate to:</p> <pre><code>http://localhost:8080\n</code></pre> <p>Default login credentials: - Username: <code>admin</code> - Password: <code>admin</code></p> <p>Security Notice</p> <p>Change the default password after your first login by setting the <code>ADMIN_PASSWORD</code> environment variable.</p>"},{"location":"getting-started/quick-start.html#whats-next","title":"What's Next?","text":"<p>Now that you have the basic setup running, you can:</p> <ul> <li>Configure alert thresholds</li> <li>Set up Discord notifications</li> <li>Learn about different running modes</li> <li>Explore the API for programmatic access</li> </ul>"},{"location":"getting-started/quick-start.html#running-in-test-mode","title":"Running in Test Mode","text":"<p>For testing purposes, you can run the monitor in test mode, which uses mock data and accelerated scanning:</p> <pre><code>go run cmd/monitor/main.go -test\n</code></pre> <p>This is useful for: - Testing your setup without connecting to a real network - Developing new features - Verifying alerts are working properly</p>"},{"location":"getting-started/quick-start.html#common-issues","title":"Common Issues","text":""},{"location":"getting-started/quick-start.html#connection-problems","title":"Connection Problems","text":"<p>If you're having trouble connecting to the Solana network:</p> <ul> <li>Verify your network URL is correct</li> <li>Check if the RPC endpoint has rate limits</li> <li>Consider using a paid RPC service for better reliability</li> </ul>"},{"location":"getting-started/quick-start.html#no-alerts","title":"No Alerts","text":"<p>If you're not receiving alerts:</p> <ul> <li>Ensure your alert thresholds are set appropriately</li> <li>Check that the wallets have activity</li> <li>Verify the <code>minimum_balance</code> isn't set too high</li> </ul> <p>See the Troubleshooting section for more help.</p>"},{"location":"getting-started/running-modes.html","title":"Running Modes","text":"<p>Solana Insider Monitor can be run in several different modes to suit your specific needs. This guide explains each mode and how to use it.</p>"},{"location":"getting-started/running-modes.html#console-mode","title":"Console Mode","text":"<p>Console mode is the most basic way to run Solana Insider Monitor. In this mode, the application runs in your terminal, scanning wallets according to your configuration, and outputting alerts directly to the console.</p>"},{"location":"getting-started/running-modes.html#when-to-use-console-mode","title":"When to Use Console Mode","text":"<ul> <li>For quick monitoring sessions</li> <li>In server environments without a GUI</li> <li>For debugging and testing configurations</li> <li>When integrating with other command-line tools</li> </ul>"},{"location":"getting-started/running-modes.html#how-to-run-in-console-mode","title":"How to Run in Console Mode","text":"<pre><code>go run cmd/monitor/main.go\n# or if you've built the binary\n./bin/insider-monitor\n</code></pre>"},{"location":"getting-started/running-modes.html#example-output","title":"Example Output","text":"<pre><code>[INFO] 2023-05-01T12:34:56Z: Scanning wallets...\n[INFO] 2023-05-01T12:35:01Z: Found token balance change for wallet 55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr\n[WARNING] 2023-05-01T12:35:01Z: Token SOL decreased by 25% in wallet 55kBY9yxqQzj2zxZqRkqENYq6R8PkXmn5GKyQN9YeVFr\n</code></pre>"},{"location":"getting-started/running-modes.html#web-interface-mode","title":"Web Interface Mode","text":"<p>Web interface mode starts the monitor with a web-based UI, allowing you to visualize wallet data, manage configuration, and view alerts through a browser.</p>"},{"location":"getting-started/running-modes.html#when-to-use-web-interface-mode","title":"When to Use Web Interface Mode","text":"<ul> <li>For visual monitoring of multiple wallets</li> <li>When you need a user-friendly interface</li> <li>For team environments where multiple people need access</li> <li>When you want to view historical data and trends</li> </ul>"},{"location":"getting-started/running-modes.html#how-to-run-with-web-interface","title":"How to Run with Web Interface","text":"<pre><code>go run cmd/monitor/main.go -web\n# or if you've built the binary\n./bin/insider-monitor -web\n</code></pre> <p>By default, the web interface runs on port 8080. You can specify a different port:</p> <pre><code>go run cmd/monitor/main.go -web -port 9090\n</code></pre>"},{"location":"getting-started/running-modes.html#accessing-the-web-interface","title":"Accessing the Web Interface","text":"<p>Once running, access the web interface by navigating to: <pre><code>http://localhost:8080\n</code></pre></p> <p>Authentication Required</p> <p>The web interface requires authentication. Default credentials are: - Username: <code>admin</code> - Password: <code>admin</code></p> <p>Change the default password by setting the <code>ADMIN_PASSWORD</code> environment variable.</p>"},{"location":"getting-started/running-modes.html#web-interface-features","title":"Web Interface Features","text":"<p>The web interface includes:</p> <ul> <li>Dashboard with overview of all monitored wallets</li> <li>Detailed view of each wallet's token balances</li> <li>Configuration management</li> <li>Alert history and filtering</li> <li>Real-time data refresh</li> </ul>"},{"location":"getting-started/running-modes.html#test-mode","title":"Test Mode","text":"<p>Test mode runs the monitor with mock data and accelerated scanning, useful for testing your setup without connecting to a real network.</p>"},{"location":"getting-started/running-modes.html#when-to-use-test-mode","title":"When to Use Test Mode","text":"<ul> <li>During initial setup to verify configuration</li> <li>When developing new features</li> <li>For demonstrations and presentations</li> <li>Testing alert thresholds and notification systems</li> </ul>"},{"location":"getting-started/running-modes.html#how-to-run-in-test-mode","title":"How to Run in Test Mode","text":"<pre><code>go run cmd/monitor/main.go -test\n# or if you've built the binary\n./bin/insider-monitor -test\n</code></pre> <p>You can combine test mode with web interface mode:</p> <pre><code>go run cmd/monitor/main.go -test -web\n</code></pre>"},{"location":"getting-started/running-modes.html#custom-configuration-file","title":"Custom Configuration File","text":"<p>By default, Solana Insider Monitor looks for <code>config.json</code> in the current directory. You can specify a different configuration file:</p> <pre><code>go run cmd/monitor/main.go -config /path/to/custom-config.json\n</code></pre>"},{"location":"getting-started/running-modes.html#environment-variables","title":"Environment Variables","text":"<p>Solana Insider Monitor supports configuration via environment variables, which can be useful in containerized environments:</p> Environment Variable Description <code>NETWORK_URL</code> Solana RPC endpoint URL <code>SCAN_INTERVAL</code> Time between scans (e.g., \"30s\", \"1m\") <code>ADMIN_PASSWORD</code> Password for web interface admin access <code>DISCORD_WEBHOOK_URL</code> Discord webhook for notifications <code>MIN_BALANCE</code> Minimum token balance to trigger alerts <code>SIGNIFICANT_CHANGE</code> Percentage change to trigger alerts (e.g., 0.20 = 20%)"},{"location":"getting-started/running-modes.html#using-environment-variables","title":"Using Environment Variables","text":"<pre><code>export NETWORK_URL=\"https://api.mainnet-beta.solana.com\"\nexport ADMIN_PASSWORD=\"your-secure-password\"\ngo run cmd/monitor/main.go -web\n</code></pre> <p>Or in one line:</p> <pre><code>NETWORK_URL=\"https://api.mainnet-beta.solana.com\" ADMIN_PASSWORD=\"your-secure-password\" go run cmd/monitor/main.go -web\n</code></pre>"},{"location":"getting-started/running-modes.html#running-as-a-service","title":"Running as a Service","text":"<p>For production environments, you might want to run Solana Insider Monitor as a system service.</p>"},{"location":"getting-started/running-modes.html#systemd-service-example","title":"Systemd Service Example","text":"<p>Create a file at <code>/etc/systemd/system/solana-monitor.service</code>:</p> <pre><code>[Unit]\nDescription=Solana Insider Monitor\nAfter=network.target\n\n[Service]\nUser=solana\nWorkingDirectory=/opt/solana-monitor\nExecStart=/opt/solana-monitor/bin/insider-monitor -web\nRestart=on-failure\nEnvironment=ADMIN_PASSWORD=your-secure-password\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Enable and start the service:</p> <pre><code>sudo systemctl enable solana-monitor\nsudo systemctl start solana-monitor\n</code></pre> <p>Check status:</p> <pre><code>sudo systemctl status solana-monitor\n</code></pre>"},{"location":"getting-started/running-modes.html#logging","title":"Logging","text":"<p>By default, Solana Insider Monitor logs to stdout. You can redirect logs to a file:</p> <pre><code>go run cmd/monitor/main.go &gt; monitor.log 2&gt;&amp;1\n</code></pre> <p>For more advanced logging configurations, consider using a log management solution like logrotate.</p>"}]}